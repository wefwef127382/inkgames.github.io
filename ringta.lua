--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,ba,bb,bc,bd,bd)local bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr=103,66,29,78,76,73,48,32,88,75,65,47,18,57,79,12,21,89,48,37,46,71,16,76,52,76,63,95,89,37,96,54,27,59,12,59,69,13,52,70,84,65,28,46,10,84,63,35,95,55,73 while bd~=76 do if be>=764 then if be<=1115 then if be>=922 then if be>=1041 then if be>=1083 then if be>1089 then be=1162 bp=function()local bd bd=bn(cj,bi,bi)bi=(bi+1);return bd;end else be=1115 do bs=function()local bd,cs,ct,cu ct,cu,cs,bd=bn(cj,bi,(bi+3))bi=(bi+4);return((bd*16777216)+(cs*65536)+(cu*256)+ct);end end end else bi=1 be=1083 end else if be<=922 then be=964 cf=function(bd,cs,ct,cu)local cu,cv,cw=65,51,13,63,25,25,10,84,40,94,41,99,24 while cu~=44 do if cv>=125 then if cv>=164 then if cv>171 then break else cv=212 do return cw end end else cv=164 cw=(cw-cw%1)end else if cv<=51 then cw=nil cv=73 else if cv<94 then cw=o cv=96 else cw=((cs/bf[bd])%bf[ct])cv=125 end end end end end else if be<985 then be=993 cg=(bit_lib and bit_lib.bxor or function(o,bd)o=o%(2^32)bd=bd%(2^32)local cs,ct=0,1 while o>0 and bd>0 do local cu,cv=o%16,bd%16 cs=cs+by[cu+1][cv+1]*ct o=(o-cu)/16 bd=(bd-cv)/16 ct=ct*16 end cs=cs+o*ct+bd*ct return cs end)else bv=function(o,bd,cs,ct,ct,ct)local ct ct=((o/2^(bd-1))%2^((cs-1)-(bd-1)+1))return(ct-ct%1);end be=1041 end end end else if be>=809 then if be>=841 then if be>848 then do for o=d,31 do bf[o]=bl bl=(bl*2)end end be=922 else bl=2 be=889 end else be=841 bf={[0]=1}end else if be<773 then be=780 bh=''else cr=(2^52)be=809 end end end else if be>=1350 then if be>=1440 then if be>=1466 then if be<1489 then be=1497 return cl(ch(ck()),{},ck())();else break end else be=1466 cl=function(d,o,bd,cs)local cs,ct,cu,cv,cw cs=d[41]cw=d[124]cv=d[34]ct=d[165]cu=cc do return function(...)local d,cu,cx,cy,cz,da,db,dc,dd db=1 cu=-1 do dc=-1 end cz={}da={...}cx=(bm('#',...)-1)d={}cy={}for dc=0,cx do if(not(dc<cw))then cz[(dc-cw)]=da[(dc+1)];else do cy[dc]=da[(dc+1)];end end;end;dd=(cx-cw+1)do while true do local dc,dd,de,df,dg,dh,di,dj,dk,dl do dh=ct[db]end df=dh[51]do dk=dh[152]end dg=dh[164]dd=dh[135]dl=dh[163]di=dh[73]dj=dh[194]dc=dh[126]do de=dh[155]end do if not(df>48)then if not(df>23)then if not(df<12)then do if not(df>17)then if not(df<15)then if not(dh[51]<16)then if(df>16)then local dk,dm dm=dc dk=cy[dm]do for dn=(dm+1),dl do dk=(dk..cy[dn]);end;end cy[dg]=dk;else cy[dg]=(cy[dc]/cy[dl]);end else cy[dh[dg]]=cy end else if not(df>12)then cy[dg][cs[dc]]=cs[dl];else do if 13==df then cy[de]=(function()cy[dg]=cl(cv[dd],nil,bd);end)else if not cy[dg]then do db=dc;end end;end end end end else if not(df>20)then if not(df>18)then local dk,dm,dn dm=dg dn=cy[dm]dk=cy[(dm+2)]if((dk>0))then if((dn>cy[dm+1]))then db=dc;else cy[(dm+3)]=dn;end elseif((dn<cy[dm+1]))then db=dc;else cy[(dm+3)]=dn;end else if(df>19)then db=((cy[dg]~=cy[dh[163]])and dc or db)else cy[dg]=(cy[dc]-cy[dl]);end end else if not(df>21)then bd[cs[dh[126]]]=cy[dg];else if not(df~=22)then cy[dg]=cy[dc]else end end end end end else do if not(df<6)then if not(df<9)then if not(df<10)then if 10==df then cy[dg]=o[dc];else do return cy[dh[194]][di]end end else do cy[dg]=cs[dc]end end else do if not(df>6)then cy[de]=(function()cy[dg]=cl(cv[dd],ba,bd);end)else if(df>7)then cs=cc[dg](cs)else cy[dg]=(cy[dc]%cy[dl]);end end end end else if not(df>2)then if not(dh[51]>0)then local ba ba=dh[164]cy[ba](co(cy,(ba+1),cu))else if(df<2)then if(not(cy[dg]<cy[dl]))then db=dc;end;else cc=cy end end else do if not(df<4)then if not(dh[51]~=4)then db=((cs[dg]~=cs[dl])and dh[126]or db)elseif cy[dg]then db=dc;end else cy[dg]=cl(cv[dc],nil,bd);end end end end end end else if not(df>35)then do if not(df<30)then if not(df<33)then if not(df>33)then cy={};for ba=0,cx do if(ba<cw)then cy[ba]=da[(ba+1)];else break end;end;else if(df>34)then do while((cy[dg]~=cs[dl]))do db=dc;break end end else cy[dg]=cc[dd]end end else if not(df>30)then do do return cy[dg]();end;end else if(dh[51]<32)then bd=cy[dh[dg]]else db=((cs[dg]<cy[dl])and dc or db)end end end else if not(df>26)then if not(df>24)then else if(df<26)then do return cy[dh[164]]end else cy[dg]=(cy[dc]+cy[dh[163]]);end end else if not(dh[51]>27)then local ba,cw cw=dh[164]ba={}for cx=1,#d do local da da=d[cx]for cx=0,#da do local de,dk,dm dk=da[cx]dm=dk[1]de=dk[2]if(dm==cy and de>=cw)then do ba[de]=dm[de];end dk[w]=ba;end;end;end;else if(dh[51]>28)then local w,ba,cw w=dg cw=cy[(w+2)]do ba=(cy[w]+cw)end do cy[w]=ba;end if((cw>0))then do while(ba<=cy[w+1])do db=dh[m];cy[w+3]=ba;break end end elseif(not(ba<cy[w+1]))then db=dc;cy[(w+3)]=ba;end else cy[dg][cy[dc]]=cy[dh[163]];end end end end end else if not(dh[51]>41)then if not(df<39)then if not(df>k)then ct[db]=ci[dh[73]];db=dh[126];else if not(df~=40)then cy[dh[164]]=(cy[dc]%cs[dl]);else local k,m m=dh[164]k=dc for w=m,k do do cy[w]=cz[(w-m)];end end;end end else if not(df>36)then cy[dg]=bd[cs[dc]][cs[dl]];else if(df>37)then local k k=dg cy[k](cy[(k+1)])else cy[dg]=bd[cs[dc]];end end end else if not(dh[51]>44)then if not(df>42)then local k,m m=dg k=cy[dh[126]]cy[(m+1)]=k;cy[m]=k[cy[dl]];else if(df<44)then cy[dh[164]]();else do db=dc;end end end else if not(df>46)then if(df>45)then db=((cy[dg]<cy[dl])and dc or db)else cy[dg]=(cy[dc]*cs[dl]);end else if(df>47)then cy[dg]=(bb~=dc);db=(db+1);else end end end end end end else if not(df>73)then if not(df<61)then if not(df<67)then do if not(df>69)then if not(df>67)then if(cy[dl]~=cy[dg])then db=dc;end;else if(df<69)then local k,m,w k=cv[dh[126]]m=nil w={}do m=bk({},{__index=function(ba,ba)local ba=w[ba];return ba[1][ba[2]];end,__newindex=function(ba,ba,bb)local ba=w[ba]ba[1][ba[2]]=bb;end;});end for ba=1,dl do local bb bb=dh[38][ba]if bb[1]then w[(ba-1)]={cy,bb[2],nil};else do w[(ba-a)]={o,bb[2],nil,nil};end end;d[(#d+1)]=w;end;cy[dh[y]]=cl(k,m,bd);else local a,k a=dg do k=cy[dc]end do cy[(a+1)]=k;end cy[a]=k[cs[dl]];end end else if not(dh[51]>g)then do if not(df~=70)then cc[dg]=cc[dd]else local a a=dg cy[a](co(cy,(a+1),dc))end end else do if(df>72)then local a do a=dg end cy[a]=cy[a](co(cy,a+1,cu));else do ct[db]={[73]=0,[163]=0,[164]=11,[126]=16,[51]=df-35};end do db=(db-1);end end end end end end else do if not(df<64)then if not(df>64)then cy[dg]=cy[dc];else if(df<66)then do if((cy[dg]>cy[dl]))then do db=dc;end end;end else while(cs[dg]<cy[dl])do db=dc;break end end end else do if not(df>61)then local a do a=dg end cy[a]=cy[a](cy[a+1]);else if(df<63)then local a,g,k g=dg a={cy[g](cy[g+1])}k=0 for m=g,dl do k=(k+1);cy[m]=a[k];end else local a a=dg do return co(cy,a,(a+dc))end;end end end end end end else do if not(df<55)then if not(dh[51]>57)then do if not(df>55)then cy[dh[164]]=cy[dc][cs[dl]];else if(df<57)then cy[dg]=(cy[dh[126]]+cs[dh[163]]);else cy[dg]=(cy[dc]*cy[dh[163]]);end end end else do if not(df<59)then if(df<60)then if not cy[dl]then cy[dg]=cy[dl];db=dc;end;else local a a=cy[dj][di]cy[dh[194]][di]=(a..cy[dl]);end else do cy[dg]=(not cy[dh[126]]);end end end end else if not(dh[51]>51)then if not(df>49)then local a,g g=dg a={}while#d>0 do for k=bc,#d do local k=d[k]for m=0,#k do local k=k[m]local m=k[1]local w=k[2]if m==cy and w>=0 then a[w]=m[w]k[1]=a end end end break end return co(cy,g,cu);else if(dh[51]<51)then local a,g,k a=dg do g=cy[a]end k=dc for m=1,k do g[m]=cy[(a+m)]end;else cy[dg][cs[dc]]=cy[dl];end end else if not(df<53)then do if(df<54)then cy[dg]=(cy[dc]^cy[dl]);else local a,g g,a=bw(...)for a=1,dg do cy[(a-1)]=g[a]end end end else local a a=dg do cy[a]=cy[a](co(cy,a+1,dc));end end end end end end else if not(df>85)then if not(df>z)then if not(dh[51]<77)then if not(df>77)then o[dc]=cy[dh[164]];else if(dh[51]>78)then ct[db]=ci[di];do db=dc;end else cy[dg]=nil;end end else if not(df>74)then cc[dg]()else if not(df~=75)then cy[dg]=(cy[dh[126]]/cs[dl]);else do cy[dg]=-cy[dc];end end end end else if not(dh[51]<q)then if not(df>83)then local a a={}if(#d>0)then for g=1,#d do local k do k=d[g]end for d=i,#k do local g,i,m do i=k[d]end m=i[1]g=i[2]if(m==cy and g>=0)then a[g]=m[g]i[1]=a end end end end return df,cy[(dh[164]+2)];else if(df<85)then local a,d,g,i g=dh[164]do d,i=bw(cy[g](cy[(g+1)]))end cu=(i+g-1)a=0 for i=g,cu do do a=(a+1);end cy[i]=d[a];end;else cc[dg]={}end end else if not(df>80)then local a,d,g,i i=dg d=((dl-1)*50)g=cy[i]do a=dh[126]end do for k=1,a do g[(d+k)]=cy[(i+k)]end;end else if(df<82)then if dh[164]then dg=false;dl=dc;do db=(db-1);end else db=(db+dh[126]+dl);end else cy[dh[155]]();end end end end else if not(dh[51]>91)then do if not(df>88)then if not(dh[51]<87)then if(df>87)then do cu=dh[dg];end else local a,d,g,i,k d=dg g=dl k=(d+2)a={cy[d](cy[d+1],cy[k])}do for m=1,g do do cy[(k+m)]=a[m]end end end i=cy[(d+3)]if i then cy[k]=i else do db=dc;end end;end else local a,d,g a=dg g={cy[a](co(cy,a+1,dh[126]))}do d=s end for i=a,dl do d=(d+1);cy[i]=g[d];end end else if not(dh[51]>89)then local a,d,g,i d=dg i={cy[d]()}a=dl g=0 for k=d,a do g=(g+1);do cy[k]=i[g];end end else do if(df>90)then cy[dg]={};else cc[dg]=cy[dd]end end end end end else do if not(df<95)then if not(df<97)then if(dh[51]>97)then while((cy[dg]<cy[dh[163]]))do db=dc;break end else cy[dg]=cc[dd]end else do if not(df~=95)then for a=dg,dc do cy[a]=nil;end;else local a,d,g,i d=dg a,i=bw(cy[d](co(cy,(d+1),dc)))do cu=(i+d-1)end g=0 for i=d,cu do g=(g+1);cy[i]=a[g];end;end end end else if not(df>92)then do cy[dg]=cy[dc][cy[dl]];end else if(df<94)then local a do a=dg end do do return cy[a](co(cy,(a+1),dc))end end;else cy[dg]=#cy[dc];end end end end end end end end end db=(db+1);end;end end;end end end else if be>=1391 then if be>1398 then ca={}be=1440 else be=1418 cc={}end else ch=function(a,d,d,d)local d,g,i,k,m,o,q,s=93,81,67,53,94,28,45,45,30,21,35,38,85,21,85,83,36,76,13,34,56,81,55,88,57,99 while d~=50 do if g<=278 then if g>=182 then if g>=240 then if g>248 then o={}g=319 else g=278 i=bs()end else if g<195 then m=bs()g=204 else do for w=(#ci+1),(#ci+m)do local y,z,ba,bb,bc=84,29,82,55,45,13,58,55,47,76,67,43,12,49,37,34,41,44,36,58,62,56,28 while y~=51 do if z>=318 then if z<=394 then if z<=353 then if z>325 then bc[135]=bv(ba,12,20);z=368 else z=353 bc[164]=bv(ba,3,11);end else if z<392 then z=394 bc[163]=bv(ba,21,29);else z=413 do bc[126]=bv(bb,12,33);end end end else if z>=468 then if z>477 then y=51;else z=502 ci[w]=bc;end else if z>420 then z=468 bc[155]=-bc[163]else z=451 do bc[194]=-bc[164]end end end end else if z<=146 then if z<=78 then if z>37 then z=119 bc={}else ba,bb,bc=nil z=78 end else if z>122 then z=172 ba=bs()else z=146 bc[152]=bp();end end else if z<=190 then if z>181 then bc[73]=bp();z=233 else z=190 do bb=bs()end end else if z<264 then z=269 bc[28]=bv(ba,1,2);else z=318 do bc[51]=bv(bb,1,11);end end end end end end end end g=240 end end else if g<=99 then if g>85 then q={}g=120 else g=99 i,k,m,o,q,s=nil end else if g>126 then g=182 s={}else g=141 k={}end end end else if g<=432 then if g<=349 then if g>324 then g=386 do s[41]=o end else g=349 for m=1,i do local i,w,y,z=78,57,78,45,91,64,98,88,92,33,43,94 while i~=38 do if w>=172 then if w<=172 then w=216 if(0==y)then z=(not(bp()==0));elseif(not(y~=3))then z=bo();elseif(not(y~=2))then z=bg();elseif(4==y)then z=a[bg()];end;else if w<252 then w=256 o[m]=z;else i=38;end end else if w<=57 then w=103 y,z=nil else if w<126 then w=131 y=bp()else w=172 z=nil end end end end end end else if g>389 then g=468 do s[34]=k;end else for a=1,bs()do k[a-1]=ch();end g=432 end end else if g>=540 then if g<=540 then s[124]=bp();g=561 else if g<594 then g=596 return s;else d=50;end end else if g>470 then g=540 s[165]=q;else for a=1,bs()do local d,i,k,m,o,s=52,57,37,52,53,81,98,33,60,23,45,11,52,45,11,64,27,80,85,56,58,94,65,22,52,17 while d~=39 do if i<=310 then if i>=181 then if i>=265 then if i<=265 then i=291 o=bs()else if i<305 then i=310 k=bv(s,1,2)else i=336 m[28]=k end end else if i<217 then i=220 if 1==bp()then for w=1,bp()do m[38][w]={bp()==0,bs()}end end else do s=bs()end i=265 end end else if i<=103 then if i>59 then do m={{},nil}end i=129 else i=103 k,m,o,s=nil end else if i>134 then m[38]={};i=181 else i=165 m[152]=bp();end end end else if i<=449 then if i<=380 then if i>343 then i=402 m[164]=bv(s,3,11);else i=380 m[51]=bv(o,1,11);end else if i>404 then i=466 m[163]=bv(s,21,29);else i=449 m[l]=bv(o,12,33);end end else if i>=528 then if i<=528 then i=567 m[155]=-m[163]else if i<610 then i=614 q[a]=m;else d=39;end end else if i>471 then m[194]=-m[164]i=528 else m[73]=bv(s,12,20);i=493 end end end end end end g=513 end end end end end end be=1391 end end else if be>=1246 then if be>=1272 then if be>1278 then ci={}be=1350 else do bw=function(...)do return{...},bm('#',...)end end end be=1304 end else be=1272 do bg=function(a,a,a,a,a)local a,d,g,i=73,43,29,44,17,27,70,36,87,86,59,10,91 while a~=42 do if d<=126 then if d<=43 then g,i=nil d=85 else if d>89 then d=159 do i=cj:sub(bi,(bi+g-1))end else g=bs()d=126 end end else if d<=159 then d=175 bi=(bi+g);else if d>181 then break else d=190 do return i;end end end end end end end end else if be<1197 then be=1202 ce=function()local a,d a,d=bn(cj,bi,(bi+2))bi=(bi+2);do return((d*256)+a);end end else be=1246 bo=function()local a,d,g,i,k,l,m,o=57,37,17,53,97,76,69,25,43,87,76,60,14,32,71,33,68,31,99,35 while a~=39 do if d>=213 then if d<=273 then if d>=258 then if d>261 then m=1 d=316 else d=273 do i=(cf(0,o,20)*4294967296+l)end end else g=cf(20,o,11)d=258 end else if d<=316 then if not(g~=0)then if not(i==0)then g=1 m=0 else do return(k*0)end end elseif 2047~=g then else do if 0==i then do return(k*(0/0))end else return(k*(1/0))end end end d=359 else if d<401 then d=406 return(k*(2^(g-1023))*(i/cr+m))else break end end end else if d>=102 then if d<=102 then d=125 do o=bs()end else if d>133 then k=((-1)^cf(31,o,1))d=213 else d=171 if((l==0 and o==0))then return 0 end end end else if d>46 then d=102 l=bs()else g,i,k,l,m,o=nil d=62 end end end end end end end end end else if be<=387 then if be>=223 then if be>=326 then if be>=363 then if be>369 then be=429 bk=setmetatable else ck=(getfenv or function()return _ENV end)be=387 end else be=363 bt=math.ldexp end else if be<=223 then cn=string.rep be=248 else if be<273 then be=282 cm=table.concat else br=table.insert be=326 end end end else if be>=130 then if be>=174 then if be>181 then bz=string.gsub be=223 else be=206 cd=string.sub end else cp=string.char be=174 end else if be<89 then be=97 bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr=nil else bn=string.byte be=130 end end end else if be<=571 then if be<=475 then if be<466 then do bm=select end be=475 else be=513 bx=type end else if be<=513 then bq=(function(a,d)if f==bx(a)then return true else return false end end)be=551 else if be>554 then cb=math.floor be=601 else be=571 bj=math.abs end end end else if be>=690 then if be>=713 then if be<721 then cj=bzfunction(a,d,d,d)return bu[cq(a,16)]end)be=728 else be=764 by={{0,1,2,3,c,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,2,5,4,x,6,9,8,11,10,13,12,b,14,},{2,3,0,1,6,7,4,5,10,11,8,9,14,15,12,13,},{3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12,},{4,5,6,7,0,h,2,3,12,13,14,15,8,9,10,11,},{5,4,7,6,1,0,3,2,13,12,15,14,9,8,11,10,},{6,7,4,5,n,3,0,1,14,15,12,13,10,11,8,9,},{7,6,5,4,3,2,1,0,15,14,13,12,11,10,j,8,},{8,9,10,11,12,13,p,15,0,1,2,t,u,5,6,7,},{9,8,11,r,13,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,e,13,12,3,2,1,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,v,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,10,11,8,9,6,7,4,5,2,3,0,1,},{15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,},nil,nil,nil}end else for a=0,255 do bu[a]=cp(a);end be=713 end else if be>=621 then if be>623 then be=690 bu={}else cq=tonumber be=666 end else co=(unpack or table.unpack)be=621 end end end end end end end)(1,15,4,1,14,'number',71,1,0,9,39,126,126,2,nil,14,83,10,0,3,4,9,1,7,164,79,nil,0,1)
