--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,ba,bb,bc,bd,be)local be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs=125,82,93,51,61,13,18,43,21,71,40,71,98,86,85,50,19,46,99,49,23,83,97,97,44,17,81,54,60,38,31,59,27,67,88,18,39,66,60,83,86,48,64,87,20,59,73,32,43,33,93,59,57 while be~=76 do if bf>=790 then if bf>=1122 then if bf<=1245 then if bf<=1164 then if bf<1156 then bh=function()local ct,cu ct,cu=br(bi,cb,(cb+2))cb=(cb+2);return((cu*256)+ct);end bf=1164 else bf=1186 bl=function()local ct,cu,cv,cw,cx,cy,cz,da=89,41,75,68,41,80,34,56,49,61,97,20,57,64,55,25,10,14,69,94 while ct~=42 do if cu>=188 then if cu>=284 then if cu<=284 then do if not(cz~=bc)then do if 0~=da then cz=1 cy=0 else return(cv*0)end end elseif not(cz==2047)then else if not(da~=0)then do do do return(cv*(0/0))end end end else return(cv*(1/0))end end end cu=311 else if cu<323 then cu=327 return(cv*(2^(cz-1023))*(da/bt+cy))else ct=42;end end else if cu<=188 then do cz=bo(20,cw,11)end cu=234 else if cu>240 then do cy=1 end cu=284 else da=(bo(0,cw,20)*4294967296+cx)cu=249 end end end else if cu<=69 then if cu<67 then cu=69 cv,cw,cx,cy,cz,da=nil else cu=101 do cx=cn()end end else if cu>=135 then if cu>142 then cv=((-1)^bo(z,cw,1))cu=188 else while(cx==0 and cw==0)do return 0 end cu=167 end else cw=cn()cu=135 end end end end end end else if bf<=1186 then do ci=function(z,z)local z,bc,ct,cu=45,56,77,73,59,37,54,21,55,56,15,63 while z~=30 do if bc>=154 then if bc>=173 then if bc<202 then bc=211 return cu;else z=30;end else cb=(cb+ct);bc=173 end else if bc>=92 then if bc<110 then do ct=cn()end bc=114 else do cu=bi:sub(cb,(cb+ct-1))end bc=154 end else ct,cu=nil bc=92 end end end end end bf=1227 else if bf>1231 then bf=1277 cr={}else bf=1245 bm=function(...)return{...},by('#',...)end end end end else if bf>=1368 then if bf>=1411 then if bf<1456 then bf=1460 do return cq(bs(bn()),{},bn())();end else be=76;end else bf=1411 cq=function(z,bc,be,ct,ct)local ct,cu,cv,cw,cx cx=z[23]do ct=bq end cu=z[53]cv=z[51]do cw=z[161]end return function(...)local z,ct,cy,cz,da,db,dc,dd,de cz=1 de=-1 dd=-1 z={}cy={...}da=(by('#',...)-u)db={}ct={}do for u=0,da do if(not(u<cu))then do z[(u-cu)]=cy[(u+1)];end else ct[u]=cy[(u+1)];end;end;end do dc=(da-cu+v)end do while true do local u,v,dc,dd,df,dg,dh,di,dj,dk u=cv[cz]df=u[189]dj=u[58]v=u[g]di=u[104]do dc=u[148]end do dk=u[195]end do dh=u[63]end dg=u[24]dd=u[199]if not(df<47)then if not(df<71)then if not(u[189]>82)then do if not(u[189]>76)then do if not(df>73)then if not(u[189]>71)then ct[v]=(ct[dg]^ct[dc]);else if 72==u[189]then else local g g=u[78]do return ct[g](bg(ct,(g+1),dg))end;end end else if not(df<75)then if(u[189]>75)then local g do g=v end ct[g]=ct[g](bg(ct,g+1,dg));else local g g=v ct[g](bg(ct,(g+1),de))end else ct[u[78]]=(not ct[dg]);end end end else if not(u[189]<80)then if not(df>80)then cz=((cx[v]~=cx[u[148]])and dg or cz)else if(df>81)then do bq[v]()end elseif((ct[v]<ct[dc]))then cz=u[24];end end else if not(df<78)then if 78==u[189]then be=ct[u[v]]else do return ct[dh][u[195]]end end else ct[v]();end end end end else do if not(df>88)then if not(df>85)then if not(df>83)then ct[u[78]]=ct[dg]else if 84==df then local g,dj,dl,dm do dl=v end dj=((u[148]-1)*50)g=ct[dl]do dm=dg end do for dn=1,dm do g[(dj+dn)]=ct[(dl+dn)]end;end else ct[v]=be[cx[dg]][cx[dc]];end end else do if not(df<87)then if 87==df then local g,dj dj=v do g=ct[dg]end ct[(dj+1)]=g;ct[dj]=g[cx[dc]];else local g g=v do do return bg(ct,g,(g+dg))end;end end else local g g=v ct[g](ct[(g+1)])end end end else if not(df>91)then do if not(df>89)then ct={};for g=0,da do if(g<cu)then ct[g]=cy[(g+1)];else break end;end;else if not(df~=90)then if(not(ct[u[78]]==ct[u[148]]))then do cz=dg;end end;else ct[dd]();end end end else if not(df<o)then do if not(df~=93)then ct[v][cx[u[24]]]=ct[dc];else local g,o,cu,cy cu=v g,cy=bm(ct[cu](bg(ct,(cu+1),dg)))de=(cy+cu-1)o=0 do for cy=cu,de do o=(o+1);ct[cy]=g[o];end;end end end else ct[u[78]]=#ct[dg];end end end end end else do if not(df<59)then if not(u[189]<65)then do if not(u[189]<68)then do if not(df>68)then do ct[v][cx[dg]]=cx[dc];end else if not(df~=69)then do cz=dg;end else do return ct[v]end end end end else if not(df>65)then cx=bq[u[78]](cx)else if not(df~=66)then do ct[u[78]]=(ct[dg]%ct[dc]);end else ct[v]=cx[dg]end end end end else if not(df<62)then if not(u[189]>62)then cz=((cx[v]<ct[dc])and dg or cz)else if(df<64)then do bq[v]=bq[di]end else local g,o do g=u[24]end do o=ct[g]end do for cu=(g+1),dc do do o=(o..ct[cu]);end end;end do ct[v]=o;end end end else if not(df<60)then do if 60==df then local g,o,cu cu=v g={ct[cu](bg(ct,cu+1,dg))}o=0 for cy=cu,dc do o=(o+1);ct[cy]=g[o];end else if((cx[v]<ct[dc]))then cz=dg;end;end end elseif not ct[v]then cz=dg;end end end else if not(df<53)then if not(df>55)then if not(df>b)then cv[cz]=cr[dk];do cz=u[24];end else if(df<55)then else ct[u[78]]=(ct[u[24]]*ct[dc]);end end else if not(df<57)then if(df<58)then do ct[v]=bq[di]end else ct[v]=(ct[dg]/cx[dc]);end else do if(not(ct[v]<ct[dc]))then cz=dg;end;end end end else do if not(df>49)then if not(df<48)then do if 48==u[189]then ct[v]=(ct[dg]-ct[dc]);else local b do b=v end ct[b]=ct[b](bg(ct,b+1,de));end end else do ct[v]=ct[u[24]][ct[dc]];end end else do if not(df>50)then if ct[v]then cz=dg;end;else do if(df>51)then cv[cz]={[78]=h,[195]=0,[148]=0,[189]=u[189]-16,[24]=2};cz=(cz-1);else local b,g b,g=bm(...)for g=1,v do ct[(g-1)]=b[g]end end end end end end end end end end end else if not(df<bb)then if not(df>34)then if not(df>28)then if not(df>25)then do if not(df<24)then do if(df>24)then local b,g g=v b={}do for h=1,#db do local o o=db[h]do for h=0,#o do local bb,cu,cy bb=o[h]cy=bb[1]cu=bb[2]if(cy==ct and cu>=g)then b[cu]=cy[cu];bb[1]=b;end;end;end end;end else local b b={}if(#db>0)then for g=1,#db do local h h=db[g]for g=0,#h do local o,bb,cu do bb=h[g]end o=bb[e]cu=bb[2]if(o==ct and cu>=0)then b[cu]=o[cu]bb[1]=b end end end end return false,ct[(v+1)],true;end end else do ct[v]=bq[di]end end end else if not(u[189]<27)then if(df<28)then else local b,e,g,h,o e=v g=dc do b=(e+2)end o={ct[e](ct[e+1],ct[b])}for bb=1,g do ct[(b+bb)]=o[bb]end h=ct[(e+3)]if h then ct[b]=h else cz=u[24];end;end else local b,e,g e=v g={ct[e](ct[e+1])}b=0 for h=e,dc do b=(b+1);ct[h]=g[b];end end end else if not(u[189]<32)then if not(df<33)then if(u[189]>33)then for b=u[78],dg do ct[b]=nil;end;else ct[v]=ct[dg][cx[dc]];end else if not ct[dc]then ct[u[78]]=ct[dc];cz=dg;end;end else if not(df<30)then if not(df~=30)then local b,e,g g=v do b=ct[g]end e=dg for h=1,e do b[h]=ct[(g+h)]end;else local b,e do e=v end b=dg for g=e,b do ct[g]=z[(g-e)];end;end else ct[v]=(0~=dg);cz=(cz+1);end end end else if not(df<41)then if not(df<44)then do if not(df<45)then if(df>45)then bq=ct else cv[cz]=cr[u[195]];cz=dg;end else ct[v]=(ct[u[24]]+cx[dc]);end end else if not(df>41)then ct[u[u[78]]]=ct else do if(df<43)then local b,e e=u[78]b=ct[dg]ct[(e+1)]=b;ct[e]=b[ct[u[148]]];else ct[v]=nil;end end end end else if not(df<38)then if not(df>38)then bq[u[78]]=ct[di]else if(df>39)then do ct[u[78]][ct[dg]]=ct[u[148]];end else do ct[v]=cq(cw[dg],nil,be);end end end else do if not(df>ba)then ct[v]=(ct[u[24]]*cx[u[148]]);else if(df>36)then local b,e e=v b={}if(#db>0)then do for g=1,#db do local h h=db[g]do for g=0,#h do local o,z,ba z=h[g]ba=z[1]o=z[2]if(ba==ct and o>=0)then b[o]=ba[o]z[1]=b end end end end end end return bg(ct,e,de);else local b,e,g,h g=v b,h=bm(ct[g](ct[(g+1)]))de=(h+g-1)e=0 for h=g,de do e=(e+1);ct[h]=b[e];end;end end end end end end else if not(df>10)then if not(df>4)then if not(df<2)then if not(df>2)then local b b=ct[dh][dk]ct[dh][dk]=(b..ct[dc]);else if not(u[189]~=3)then ct[v]=(ct[u[24]]%cx[dc]);else do ct[dd]=(function()do ct[v]=cq(cw[di],nil,be);end end)end end end else if(u[189]>0)then while(ct[v]~=cx[dc])do cz=dg;break end else local b,e,g b=u[78]do g=ct[b]end e=ct[(b+2)]do if((e>0))then if((g>ct[b+1]))then do cz=dg;end else ct[(b+3)]=g;end elseif((g<ct[b+1]))then do cz=dg;end else ct[(b+3)]=g;end end end end else if not(df>7)then do if not(u[189]>5)then be[cx[u[24]]]=ct[v];else if not(u[189]~=6)then bq[v]={}else ct[dd]=(function()ct[v]=cq(cw[di],nil,be);end)end end end else if not(df<9)then if(u[189]>9)then if((ct[v]>ct[dc]))then cz=dg;end;else ct[v]=be[cx[dg]];end else do ct[u[78]]={};end end end end else if not(df<17)then do if not(df<20)then do if not(df>20)then bc[dg]=ct[v];else if(df<22)then ct[v]=bc[dg];else de=u[v];end end end else if not(df>17)then local b b=v do ct[b]=ct[b](ct[b+1]);end else if not(u[189]~=18)then cv[cz]={[189]=df- -1,[24]=12,[148]=5,[195]=0,[78]=28};cz=(cz-1);else do ct[v]=ct[dg];end end end end end else if not(df>13)then if not(df>11)then if u[78]then do v=false;end dc=dg;do cz=(cz-1);end else cz=(cz+dg+dc);end else if 12==u[d]then local b,d,e d=cw[u[24]]e=nil b={}e=cj({},{__index=function(g,g)local g=b[g];return g[1][g[2]];end,__newindex=function(g,g,h)local g=b[g]g[1][g[2]]=h;end;});for g=1,u[148]do local h h=u[68][g]if h[1]then b[(g-1)]={ct,h[2],nil,nil};else b[(g-1)]={bc,h[2],nil,nil,nil,nil};end;db[(#db+1)]=b;end;ct[v]=cq(d,e,be);else ct[v]=-ct[dg];end end else do if not(df>14)then do ct[v]=(ct[u[24]]/ct[dc]);end else do if 15==df then local b,d,e e=v d=ct[(e+2)]b=(ct[e]+d)ct[e]=b;if((d>0))then if(not(b>ct[e+1]))then cz=dg;ct[(e+3)]=b;end elseif(not(b<ct[e+1]))then cz=dg;ct[(e+3)]=b;end else do ct[v]=(ct[dg]+ct[dc]);end end end end end end end end end end cz=(cz+1);end;end end;end end else if bf<=1277 then do bs=function(b,d,d)local d,e,g,h,o,u,v,z=63,57,37,86,59,71,52,16,81,37,74,19,91,90,68,68,27,57,45,56,81,24,21 while d~=37 do if e>=331 then if e>=476 then if e>=519 then if e>=559 then if e>562 then d=37;else e=579 return v;end else v[51]=u;e=559 end else if e>484 then e=519 for d=1,cn()do local ba,bb,bc,be,ct,cu=85,50,66,45,66,84,48,85,86,60,34,74,59,55,23,21,70,45,29,98,79,85,22,12,43,15 while ba~=51 do if bb<=303 then if bb<=114 then if bb<=82 then if bb<77 then bc,be,ct,cu=nil bb=82 else bb=98 bc={{},nil,nil,nil}end else if bb<111 then bc[58]=cd();bb=114 else bb=151 bc[68]={};end end else if bb>=236 then if bb<=236 then cu=cn()bb=270 else if bb>277 then bb=349 bc[86]=be else be=cc(ct,1,2)bb=303 end end else if bb<183 then bb=190 do if not(cd()~=1)then for ba=1,cd()do bc[68][ba]={cd()==0,cn()}end end end else bb=236 ct=cn()end end end else if bb>=470 then if bb<=507 then if bb<505 then bb=507 do bc[n]=cc(ct,12,20);end else bb=528 do bc[63]=-bc[78]end end else if bb<=528 then bb=543 bc[199]=-bc[148]else if bb<569 then bb=571 u[d]=bc;else break end end end else if bb>=398 then if bb<424 then bb=433 do bc[24]=cc(cu,12,33);end else bc[148]=cc(ct,a,29);bb=470 end else if bb>355 then bc[78]=cc(ct,3,11);bb=398 else bb=381 bc[189]=cc(cu,1,11);end end end end end end else v[53]=cd();e=496 end end else if e>=407 then if e<438 then for a=1,cn()do g[a-1]=bs();end e=440 else e=476 v[161]=g;end else if e>338 then e=407 v[23]=z else e=376 for a=1,h do local d,n,ba,bb=73,58,11,10,40,84,70,47,89,51,75,88,48,38,30 while d~=38 do if n<=110 then if n<=58 then ba,bb=nil n=87 else if n>96 then bb=nil n=144 else do ba=cd()end n=110 end end else if n>=189 then if n<203 then n=210 z[a]=bb;else break end else n=189 if(not(ba~=2))then bb=(0~=cd());elseif(1==ba)then bb=bl();elseif(0==ba)then do bb=ci();end elseif(3==ba)then bb=b[ci()];end;end end end end end end end else if e>=208 then if e<=226 then if e<218 then e=226 o=cn()else do for a=(#cr+1),(#cr+o)do local b,d,n,ba,bb=81,55,82,31,76,22,83,19,15,36,57,30,83,41,55,68,46,50,12,22,83,83 while b~=48 do if d>=332 then if d<=431 then if d>=392 then if d>396 then ba[24]=cc(n,12,33);d=458 else ba[148]=cc(bb,21,29);d=431 end else if d<358 then ba[78]=cc(bb,3,11);d=366 else ba[104]=cc(bb,12,20);d=392 end end else if d>=502 then if d<524 then d=529 cr[a]=ba;else b=48;end else if d<477 then d=486 ba[63]=-ba[78]else ba[199]=-ba[w]d=502 end end end else if d>=209 then if d<=235 then if d<230 then n=cn()d=235 else ba[195]=cd();d=282 end else if d>286 then ba[189]=cc(n,1,11);d=332 else d=314 ba[86]=cc(bb,1,2);end end else if d>=128 then if d>130 then bb=cn()d=209 else ba[58]=cd();d=160 end else if d>63 then d=128 ba={}else d=85 n,ba,bb=nil end end end end end end end e=245 end else if e<286 then h=cn()e=293 else e=331 do z={}end end end else if e<=86 then if e>63 then e=130 do u={}end else e=86 g,h,o,u,v,z=nil end else if e<154 then g={}e=161 else v={}e=208 end end end end end end end bf=1292 else if bf>1297 then bf=1368 cp={}else bf=1323 bq={}end end end end else if bf>=937 then if bf>=1030 then if bf<=1030 then do cb=1 end bf=1053 else if bf>1062 then bf=1122 cd=function()local a do a=br(bi,cb,cb)end cb=(cb+1);do return a;end end else cn=function()local a,b,d,e e,a,b,d=br(bi,cb,(cb+3))cb=(cb+4);return((d*16777216)+(b*65536)+(a*256)+e);end bf=1102 end end else if bf>=981 then if bf>986 then cc=function(a,b,d,e)local e e=((a/2^(b-1))%2^((d-1)-(b-1)+1))return(e-e%1);end bf=1030 else co=(bit_lib and bit_lib.bxor or function(a,b)a=a%(2^32)b=b%(2^32)local d,e=0,1 while a>0 and b>0 do local g,h=a%16,b%x d=d+ck[g+c][h+1]*e a=(a-g)/16 b=(b-h)/16 e=e*16 end d=d+a*e+b*e return d end)bf=1012 end else bo=function(a,b,c,d,d,d,d)local d,e,g=56,57,62,59,78,85,74,12,89,25,81,80 while d~=40 do if e<=127 then if e<=57 then g=nil e=106 else if e>113 then e=153 g=((b/ch[a])%ch[c])else e=127 g=nil end end else if e<=153 then do g=(g-g%1)end e=185 else if e>192 then d=40;else e=206 return g end end end end end bf=981 end end else if bf<=824 then if bf<819 then bf=824 cl=''else bf=865 bt=(2^52)end else if bf<=865 then bf=885 ch={[0]=1}else if bf<911 then bf=914 bj=2 else bf=937 for a=1,31 do ch[a]=bj bj=(bj*2)end end end end end end else if bf>=414 then if bf>=593 then if bf<=671 then if bf>=633 then if bf<667 then bf=671 ce=tonumber else bf=695 cf={}end else do bg=(unpack or table.unpack)end bf=633 end else if bf>=727 then if bf>730 then do ck={{0,1,2,3,4,5,6,7,8,9,y,l,12,13,14,15,},{1,0,3,2,5,4,7,6,9,8,11,i,13,12,15,14,},{2,3,0,1,6,7,4,5,10,11,8,9,14,15,12,13,},{3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12,},{4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,11,},{5,4,7,6,1,0,3,2,13,s,15,14,9,8,11,10,},{6,7,4,5,2,3,0,1,14,15,12,13,10,11,8,9,},{7,k,5,4,3,2,1,0,15,14,13,p,11,t,9,8,},{8,9,10,11,12,13,14,15,0,1,f,3,4,5,6,7,},{9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,r,1,6,7,4,5,},{11,10,9,8,15,14,13,12,3,2,1,0,7,6,5,4,},{12,13,14,15,8,9,m,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,q,7,6,1,0,3,2,},{14,15,12,13,10,11,8,9,6,7,4,5,2,3,0,j,},{15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,},nil,nil}end bf=790 else bf=770 bi=csbd,function(a,b,b)return cf[ce(a,16)]end)end else for a=0,255 do do cf[a]=cm(a);end end bf=727 end end else if bf>=484 then if bf>=526 then if bf<549 then ca=math.abs bf=553 else bu=math.floor bf=593 end else bf=526 do bv=(function(a,b)if not(bw(a)~='number')then return true else return false end end)end end else if bf>420 then bw=type bf=484 else by=select bf=439 end end end else if bf>=213 then if bf<=292 then if bf<=213 then do bp=string.rep end bf=243 else if bf>248 then bf=321 cg=table.insert else bk=table.concat bf=292 end end else if bf>=339 then if bf<385 then bn=(getfenv or function()return _ENV end)bf=387 else bf=414 cj=setmetatable end else bf=339 bz=math.ldexp end end else if bf<=103 then if bf>90 then br=string.byte bf=118 else bf=103 bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs=nil end else if bf<=118 then do cm=string.char end bf=146 else if bf<189 then bf=192 bx=string.sub else bf=213 cs=string.gsub end end end end end end end end)(21,53,1,189,1,2,78,1,10,1,6,11,10,195,93,12,4,0,12,10,1,1,148,16,10,31,35,23,0,'..')
