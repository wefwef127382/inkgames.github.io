--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,ba,bb,bb,bb,bb)local bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp=111,50,36,35,73,23,85,69,64,28,33,43,32,75,94,90,39,97,89,79,37,69,20,44,65,97,12,62,77,23,14,98,16,79,42,32,23,51,54,55,60,86,18,79,90,41,25,94,54,21 while bb~=71 do if bc<=716 then if bc>=386 then if bc>=550 then if bc>=650 then if bc>=688 then if bc>697 then bc=741 ch={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14,},{2,3,u,1,h,7,4,5,10,11,8,9,v,15,12,13,},{3,2,1,0,7,c,i,4,11,10,9,8,15,14,13,12,},{4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,11,},{5,4,7,6,1,0,3,2,13,12,15,14,9,8,11,10,},{6,7,4,5,2,3,0,1,14,15,12,13,10,11,8,9,},{7,6,5,4,3,n,1,0,15,14,13,12,11,10,9,8,},{8,ba,10,11,12,13,14,15,0,1,2,3,4,5,q,7,},{9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,r,14,15,12,13,2,f,z,1,6,7,4,5,},{11,10,9,8,15,14,13,12,3,2,1,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,x,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,o,10,11,8,9,6,7,4,5,2,3,k,1,},{15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,},nil,nil}else bc=716 ce=cg(g,'..',function(c,f,f)return cb[bn(c,16)]end)end else bc=688 for c=0,255 do cb[c]=bu(c);end end else if bc<=550 then bp=(unpack or table.unpack)bc=576 else if bc<610 then bc=618 bn=tonumber else cb={}bc=650 end end end else if bc>=472 then if bc<=472 then bz=(function(c,f,f)if'number'==cn(c)then return true else return false end end)bc=502 else if bc<526 then do bm=math.abs end bc=530 else bw=math.floor bc=550 end end else if bc<426 then bc=433 br=select else bc=472 cn=type end end end else if bc>=176 then if bc>=285 then if bc>=331 then if bc>339 then bc=386 bf=setmetatable else do cf=(getfenv or function()return _ENV end)end bc=350 end else be=math.ldexp bc=331 end else if bc<=176 then bc=203 bk=string.rep else if bc<243 then bc=251 bo=table.concat else bc=285 bi=table.insert end end end else if bc>=112 then if bc<=112 then bc=133 bu=string.char else if bc<142 then cc=string.sub bc=148 else bc=176 cg=string.gsub end end else if bc<91 then bc=96 bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp=nil else bx=string.byte bc=112 end end end end else if bc>=1092 then if bc<=1206 then if bc>=1140 then if bc<=1140 then bc=1164 cj=function(c,c)local c,f,g,h=72,40,13,28,44,29,31,77,35,53,86,91,72 while c~=41 do if f>=155 then if f>=198 then if f<220 then f=227 do return g;end else c=41;end else bq=(bq+h);f=198 end else if f>=89 then if f>93 then g=ce:sub(bq,(bq+h-1))f=155 else h=cp()f=134 end else g,h=nil f=89 end end end end else if bc<1197 then bc=1206 bd=function(...)return{...},br('#',...)end else do bg={}end bc=1244 end end else if bc<1105 then ci=function()local c,f c,f=bx(ce,bq,(bq+2))bq=(bq+l);return((f*256)+c);end bc=1111 else bj=function()local c,f,g,h,i,k,l,n=89,72,12,65,95,92,99,26,39,11,29,12,53,75,82,94,99,77 while c~=47 do if f>=260 then if f<=320 then if f>=287 then if f<313 then n=(bh(0,k,20)*4294967296+h)f=320 else f=340 do g=1 end end else f=287 do i=bh(20,k,11)end end else if f<=340 then if 0==i then if not(n==0)then i=1 g=0 else do return(l*0)end end elseif 2047~=i then else do if 0==n then do do return(l*(0/0))end end else return(l*(1/0))end end end f=372 else if f<387 then f=392 return(l*(2^(i-1023))*(n/bl+g))else c=47;end end end else if f>=148 then if f>=184 then if f>189 then f=260 do l=((-1)^bh(31,k,1))end else if((h==0 and k==0))then return 0 end f=229 end else f=184 do k=cp()end end else if f>79 then h=cp()f=148 else f=121 g,h,i,k,l,n=nil end end end end end bc=1140 end end else if bc<=1301 then if bc<=1244 then cd=function(c,f,f,f)local f,g,h,i,k,l,n,o=51,50,82,20,30,99,70,89,86,20,88,23,17,76,35,24,47,21,58,88,27,68,98,92,52,31 while f~=38 do if g<=295 then if g<=149 then if g>=125 then if g>127 then i={}g=191 else h={}g=149 end else if g>57 then g=125 do l={}end else h,i,k,l,n,o=nil g=90 end end else if g<=234 then if g<229 then g=234 k=cp()else for q=(#bg+1),(#bg+k)do local k,r,u,v,x=52,74,69,46,76,21,81,37,46,16,73,90,62,80,85,96,93,14,48,46,48,14,53,42 while k~=37 do if r>=339 then if r>=426 then if r<=466 then if r<461 then r=466 u[172]=-u[86]else r=482 u[66]=-u[56]end else if r>484 then break else r=529 bg[q]=u;end end else if r>=391 then if r>399 then r=426 u[145]=by(x,12,33);else do u[56]=by(v,21,29);end r=409 end else if r<366 then r=369 u[86]=by(v,3,11);else u[102]=by(v,12,20);r=391 end end end else if r>=212 then if r<=234 then if r>215 then u[27]=bs();r=281 else x=cp()r=234 end else if r<299 then r=301 u[129]=by(v,1,2);else r=339 u[100]=by(x,1,11);end end else if r<=102 then if r>82 then r=136 u={}else r=102 u,v,x=nil end else if r<163 then r=169 u[15]=bs();else v=cp()r=212 end end end end end end g=254 end else if g>261 then n={}g=321 else g=295 do o=cp()end end end end else if g>=458 then if g<=501 then if g>464 then g=528 i[140]=l;else g=501 do for k=1,cp()do local q,r,u,v,x,z=73,51,27,48,94,68,36,15,24,18,83,30,40,33,37,49,77,73,27,57,98,31,88,24,15 while q~=55 do if r<=287 then if r>=156 then if r>=229 then if r<=229 then r=265 z=cp()else if r<282 then r=287 u=by(v,1,2)else r=307 do x[129]=u end end end else if r<189 then r=193 do if 1==bs()then for q=1,bs()do do x[165][q]={bs()==0,cp()}end end end end else r=229 v=cp()end end else if r>=102 then if r<122 then r=128 x[15]=bs();else do x[165]={};end r=156 end else if r<65 then u,v,x,z=nil r=73 else do x={{},nil}end r=102 end end end else if r<=427 then if r<=350 then if r>310 then r=390 x[86]=by(v,3,11);else x[100]=by(z,1,11);r=350 end else if r<420 then r=427 x[145]=by(z,12,33);else r=471 do x[56]=by(v,21,29);end end end else if r>=510 then if r<=510 then x[66]=-x[56]r=547 else if r<573 then r=582 l[k]=x;else break end end else if r<477 then x[j]=by(v,12,20);r=486 else r=510 do x[172]=-x[86]end end end end end end end end end else if g<=528 then i[19]=bs();g=576 else if g>580 then f=38;else g=617 return i;end end end else if g>=410 then if g>415 then g=458 i[53]=h;else g=438 do for f=1,cp()do do h[f-1]=cd();end end end end else if g>324 then g=410 i[157]=n else for f=1,o do local h,i,j,k=77,34,53,22,85,44,54,90,78,37,98,21,34,54 while h~=29 do if i>=124 then if i<=124 then i=161 if(not(j~=3))then k=(0~=bs());elseif(not(j~=2))then k=bj();elseif(4==j)then k=cj();elseif(0==j)then k=c[cj()];end;else if i<203 then i=210 n[f]=k;else break end end else if i>=66 then if i>74 then i=124 do k=nil end else i=96 j=bs()end else j,k=nil i=66 end end end end g=366 end end end end end end bc=1272 else if bc>1278 then ck={}bc=1324 else cm={}bc=1301 end end else if bc>=1356 then if bc>1360 then break else bc=1384 return co(cd(cf()),{},cf())();end else co=function(c,f,g,h)local h,i,j,k,l do j=c[140]end do l=c[53]end h=c[157]do k=cm end i=c[19]do return function(...)local c,k,n,o,q,r,u,v,x v=1 do n=-1 end q=-1 do o={}end do r={...}end x=(br('#',...)-1)do c={}end k={}do for q=0,x do if(not(q<i))then o[(q-i)]=r[(q+1)];else k[q]=r[(q+1)];end;end;end u=(x-i+1)while true do local q,u,z,ba,bb,be,bi,bj,bk,bm bm=j[v]bb=bm[100]do bk=bm[15]end do bi=bm[86]end ba=bm[102]bj=bm[w]q=bm[27]u=bm[172]do be=bm[145]end z=bm[66]if not(bb<48)then if not(bb>71)then if not(bb<60)then do if not(bb>65)then if not(bb>62)then if not(bm[100]<61)then do if not(bb~=61)then local w w=bi k[w]=k[w](bp(k,w+1,n));else end end else end else if not(bb>63)then k[bm[86]]=g[h[be]];else if(bm[100]>p)then do do return k[bi]end end else local p p=k[u][q]k[u][q]=(p..k[bm[56]]);end end end else do if not(bb<69)then if not(bb>69)then j[v]=bg[q];do v=be;end else if(bb>70)then k[bi]=(not k[be]);else local p,u u=bi p={}for w=1,#c do local bk do bk=c[w]end for w=0,#bk do local bn,bo,br br=bk[w]bn=br[1]bo=br[2]if(bn==k and bo>=u)then do p[bo]=bn[bo];end do br[1]=p;end end;end;end;end end else do if not(bb>66)then do if bi then do bi=false;end bj=be;v=(v-1);else v=(v+be+bj);end end else if 67==bb then k[bi]=cm[ba]else local p p=bi do return k[p](bp(k,(p+1),be))end;end end end end end end end else if not(bb<54)then if not(bb<57)then if not(bm[100]<58)then do if not(bb~=58)then k[bi]=k[bm[145]]else cm[bi]=k[ba]end end else local p,u u,p=bd(...)for p=1,bi do do k[(p-1)]=u[p]end end end else if not(bm[100]<55)then if(bb>55)then local p,u,w u=l[be]p=nil w={}p=bf({},{__index=function(bf,bf)local bf=w[bf];return bf[1][bf[a]];end,__newindex=function(a,a,bf)local a=w[a]a[1][a[2]]=bf;end;});for a=1,bj do local bf bf=bm[165][a]if bf[1]then do w[(a-1)]={k,bf[2],nil,nil};end else w[(a-1)]={f,bf[2],nil,nil,nil};end;c[(#c+1)]=w;end;do k[bi]=co(u,p,g);end else k[bi]=f[be];end else local a a=bi do return bp(k,a,(a+bm[145]))end;end end else if not(bm[100]>50)then if not(bb>48)then local a a=bi do k[a]=k[a](bp(k,a+1,be));end else do if(bb>49)then k[bm[66]]=(function()k[bi]=co(l[ba],nil,g);end)else f[be]=k[bm[86]];end end end else if not(bb>51)then local a,f f=bi a=k[be]k[(f+1)]=a;k[f]=a[k[bj]];else if(bm[100]>52)then cm[bi]()else k[bi]=(k[be]/h[bm[56]]);end end end end end else if not(bb>83)then if not(bb<78)then if not(bb>80)then if not(bb>78)then local a,f,p p=bi f=k[p]do a=k[(p+2)]end do if((a>0))then if((f>k[p+1]))then v=be;else k[(p+3)]=f;end elseif((f<k[p+1]))then v=be;else k[(p+3)]=f;end end else if(bb<80)then do k[bi]={};end else k[bi]=k[be][h[bj]];end end else if not(bb>81)then k[z]=(function()k[bi]=co(l[ba],nil,g);end)else do if not(bb~=82)then local a,f,p f=bi do a=k[(f+2)]end do p=(k[f]+a)end do k[f]=p;end if((a>0))then if(not(p>k[f+1]))then v=be;do k[(f+3)]=p;end end elseif(not(p<k[f+1]))then v=be;k[(f+3)]=p;end else while not k[bj]do k[bi]=k[bj];v=be;break end end end end end else if not(bb>74)then do if not(bb>72)then local a,f a=bm[145]f=k[a]for p=(a+1),bj do f=(f..k[p]);end;k[bi]=f;else if(bb>73)then do cm[bi]={}end else do k[bi]=k[be];end end end end else do if not(bb<76)then if(bb<77)then g[h[be]]=k[bi];else local a,f f=bi do a={}end if(#c>0)then do for p=1,#c do local u do u=c[p]end do for p=0,#u do local w,bf,bk do bk=u[p]end w=bk[1]bf=bk[2]if(w==k and bf>=0)then a[bf]=w[bf]do bk[1]=a end end end end end end end do return k[f],k[(f+1)]end end else k[bi]=g[h[be]][h[bj]];end end end end else if not(bb<90)then if not(bb<93)then if not(bm[100]<95)then if(bb>95)then j[v]={[86]=9,[100]=bb-33,[56]=0,[145]=14,[27]=0};v=(v-1);elseif(not(k[bi]==k[bj]))then v=be;end else if(bb>93)then v=((k[bi]<k[bj])and be or v)else k[bi]=#k[be];end end else if not(bb<91)then if(bm[100]>91)then k[bi]=(k[be]*k[bm[56]]);else do if(h[bj]~=k[bi])then v=be;end;end end elseif not k[bm[86]]then v=be;end end else if not(bb>86)then if not(bb<85)then do if(bb<86)then k[bi]=(k[be]*h[bj]);else local a do a=bi end k[a]=k[a](k[a+1]);end end else n=bm[bi];end else if not(bb>87)then k[bi]=(k[be]%k[bj]);else if not(bb~=88)then if((k[bi]>k[bj]))then do v=be;end end;elseif((k[bi]<k[bj]))then v=be;end end end end end end else if not(bb>23)then do if not(bb>11)then if not(bb<6)then do if not(bm[100]<9)then do if not(bb>9)then k[bi]=nil;else if(bb>10)then while k[bi]do v=be;break end else k[bi]=(k[be]%h[bj]);end end end else do if not(bm[100]<7)then do if 7==bb then else do k[bi]=h[be]end end end else cm[bm[86]]=cm[ba]end end end end else if not(bb<3)then if not(bb>3)then k[bi][h[be]]=h[bj];else if(bb>4)then local a do a=bi end k[a](k[(a+1)])else h=cm[bi](h)end end else if not(bb>0)then k[bm[86]]=(0~=be);v=(v+1);else if(bb<2)then k[bi]=cm[ba]else k[bi][h[be]]=k[bj];end end end end else if not(bm[100]>17)then if not(bb<15)then if not(bb>15)then v=((h[bi]~=h[bj])and be or v)else if 16==bb then local a,f,p do f=bi end a={k[f](k[f+1])}p=0 for u=f,bj do p=(p+1);k[u]=a[p];end else do j[v]=bg[bm[27]];end v=be;end end else if not(bb>12)then local a,f,j,p p=bi a,j=bd(k[p](bp(k,(p+1),be)))n=(j+p-1)f=0 for j=p,n do f=(f+1);k[j]=a[f];end;else if(bb<14)then local a,f f=bi a=be for j=f,a do k[j]=o[(j-f)];end;else do return k[bm[172]][q]end end end end else if not(bb>20)then if not(bb<19)then if(bb>19)then k[bm[bi]]=k else k[bm[86]]=-k[be];end else k[bi]=(k[bm[145]]^k[bm[56]]);end else do if not(bb<22)then if 22==bb then k[bi]();else v=bm[145];end else v=((k[bi]~=k[bj])and be or v)end end end end end end else if not(bb>35)then if not(bb<30)then if not(bb>32)then if not(bb<31)then if(bb>31)then k[bi]=(k[be]+h[bj]);else k[bi]=(k[bm[145]]/k[bj]);end else if(not(k[bm[86]]<k[bj]))then v=be;end;end else if not(bb>33)then local a a=bi do k[a](bp(k,(a+d),n))end else if not(bb~=34)then k={};for a=0,x do do if(a<i)then k[a]=r[(a+1)];else break end;end end;else do for a=bi,be do k[a]=nil;end;end end end end else if not(bm[100]<27)then if not(bb>t)then local a,d,f,i,j f=bi d=bj i=(f+2)a={k[f](k[f+e],k[i])}for e=1,d do k[(i+e)]=a[e]end j=k[(f+3)]do if j then do k[i]=j end else v=be;end;end else if(bm[100]<29)then local a a={}if(#c>0)then for d=1,#c do local e e=c[d]for d=0,#e do local f,i,j f=e[d]j=f[1]i=f[2]while(j==k and i>=0)do a[i]=j[i]f[1]=a break end end end end do return 1;end else do v=((h[bi]<k[bj])and be or v)end end end else do if not(bm[100]<y)then do if(bb>25)then local a,d,e,f f=bi a=((bj-1)*50)do d=k[f]end e=be for i=1,e do d[(a+i)]=k[(f+i)]end;else local a,d a=bi d=k[be]k[(a+1)]=d;k[a]=d[h[bj]];end end else if((h[bi]<k[bj]))then v=be;end;end end end end else if not(bb<42)then do if not(bb<45)then do if not(bb>45)then k[bi]=(k[be]-k[bj]);else do if(bb<47)then k[bi]=(k[be]+k[bj]);else k[bi][k[be]]=k[bm[56]];end end end end else if not(bb<43)then do if not(bb~=43)then local a,d,e a=bi e={k[a](bp(k,a+1,bm[145]))}d=0 do for f=a,bm[56]do d=(d+1);k[f]=e[d];end end else local a,d,e,f d=bi e,f=bd(k[d](k[(d+1)]))do n=(f+d-1)end a=0 for f=d,n do do a=(a+1);end k[f]=e[a];end;end end else local a,d d=bm[86]a={}if(#c>0)then for e=1,#c do local f f=c[e]do for c=b,#f do local b,e,h b=f[c]h=b[1]e=b[2]if(h==k and e>=0)then a[e]=h[e]b[1]=a end end end end end return bp(k,d,n);end end end else if not(bb>38)then if not(bb>36)then k[bi]=k[bm[145]][k[bj]];else if(bb<38)then k[bi]=co(l[be],nil,g);else k[z]();end end else if not(bb>39)then cm=k else if(bb>40)then g=k[bm[bi]]else local a,b,c c=bi b=k[c]a=be for d=1,a do do b[d]=k[(c+d)]end end;end end end end end end end v=(v+m);end;end;end end bc=1356 end end end else if bc<=868 then if bc>=796 then if bc>=824 then if bc>831 then for a=1,31 do bv[a]=cl cl=(cl*2)end bc=888 else bc=868 do cl=2 end end else bc=824 bv={[0]=1}end else if bc<767 then bc=770 bt=''else bc=796 do bl=(2^52)end end end else if bc>=997 then if bc<=997 then bc=1020 do bq=1 end else if bc>1029 then bs=function()local a do a=bx(ce,bq,bq)end bq=(bq+1);return a;end bc=1092 else cp=function()local a,b,c,d do b,c,d,a=bx(ce,bq,(bq+3))end do bq=(bq+4);end return((a*16777216)+(d*65536)+(c*s)+b);end bc=1053 end end else if bc<=888 then do bh=function(a,b,c,d,d,d)local d,e,f=63,35,73,92,98,40,27,86,52,46,32,99,87 while d~=42 do if e<=114 then if e<=35 then e=67 f=nil else if e>70 then do f=((b/bv[a])%bv[c])end e=145 else f=nil e=114 end end else if e<=145 then f=(f-f%1)e=161 else if e<185 then e=187 return f else d=42;end end end end end end bc=931 else if bc>934 then by=function(a,b,c,d,d)local d d=((a/2^(b-1))%2^((c-1)-(b-1)+1))do return(d-d%1);end end bc=997 else ca=(bit_lib and bit_lib.bxor or function(a,b)a=a%(2^32)b=b%(2^32)local c,d=0,1 while a>0 and b>0 do local e,f=a%16,b%16 c=c+ch[e+1][f+1]*d a=(a-e)/16 b=(b-f)/16 d=d*16 end c=c+a*d+b*d return c end)bc=955 end end end end end end end end
