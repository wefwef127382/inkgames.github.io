--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,z)local z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn=119,51,74,61,54,60,75,42,95,15,62,74,63,33,75,56,82,68,42,59,54,12,99,55,21,32,34,58,40,31,68,74,62,24,64,40,26,80,40,98,41,53,76,84,17,42,95,64,91,79,18,38 while z~=78 do if ba<=720 then if ba<=395 then if ba>=237 then if ba<=304 then if ba>=269 then if ba<296 then ba=304 do bk=table.concat end else cn=table.insert ba=327 end else bf=string.rep ba=269 end else if ba>=367 then if ba>370 then do ca=setmetatable end ba=431 else ba=395 bo=(getfenv or function()return _ENV end)end else bw=math.ldexp ba=367 end end else if ba>=127 then if ba>=162 then if ba>166 then ba=237 bn=string.gsub else ba=195 do cm=string.sub end end else cc=string.char ba=162 end else if ba>54 then ba=127 cb=string.byte else bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn=nil ba=93 end end end else if ba<=534 then if ba<=456 then if ba>436 then bx=type ba=490 else ba=456 do ci=select end end else if ba>=505 then if ba>509 then ba=558 cg=math.floor else bj=math.abs ba=534 end else ba=505 cj=(function(z,bf,bf)do if not(bx(z)~='number')then do return b end else return false end end end)end end else if ba<=597 then if ba>=573 then if ba<594 then do cd=tonumber end ba=597 else ba=646 do bd={}end end else ba=573 cf=(unpack or table.unpack)end else if ba<=646 then ba=692 do for b=0,255 do bd[b]=cc(b);end end else if ba>697 then do ch={{0,1,2,3,4,5,6,7,8,9,c,11,12,13,14,15,},{1,0,3,e,5,4,7,6,9,q,11,10,13,12,15,14,},{2,3,0,1,6,7,4,5,10,11,8,9,14,15,s,13,},{3,2,1,u,7,6,5,4,11,10,9,8,15,14,13,12,},{4,5,6,7,p,1,2,3,12,13,14,15,8,9,10,11,},{5,4,7,6,1,0,3,2,13,12,15,14,9,8,11,10,},{6,7,4,5,2,3,0,1,14,15,12,13,10,11,8,9,},{7,6,5,4,3,2,1,d,15,14,13,12,11,10,9,8,},{8,9,10,11,12,13,14,15,0,1,2,3,4,5,6,7,},{9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,14,13,12,3,n,1,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,10,11,8,9,f,7,4,5,2,3,0,1,},{15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,},nil,nil}end ba=754 else bs=bnfunction(b,c,c,c)return bd[cd(b,16)]end)ba=720 end end end end end else if ba<=1088 then if ba<=880 then if ba>=810 then if ba>=856 then if ba<872 then by=2 ba=880 else ba=918 do for b=1,31 do bg[b]=by by=(by*2)end end end else ba=856 do bg={[0]=1}end end else if ba<774 then ba=778 bm=''else bi=(2^52)ba=810 end end else if ba<=1007 then if ba>=958 then if ba>965 then bh=function(b,c,d,e,e,e)local e e=((b/2^(c-1))%2^((d-1)-(c-1)+1))return(e-e%1);end ba=1044 else ba=1007 bp=(bit_lib and bit_lib.bxor or function(b,c)b=b%(2^32)c=c%(2^32)local d,e=0,1 while b>0 and c>0 do local f,n=b%16,c%16 d=d+ch[f+1][n+1]*e b=(b-f)/16 c=(c-n)/16 e=e*16 end d=d+b*e+c*e return d end)end else ce=function(b,c,d,e)local e,f,n=69,47,93,85,41,33,43,17,57,80,23,60,35,82,29 while e~=30 do if f<=114 then if f>=96 then if f>101 then f=157 do n=((c/bg[b])%bg[d])end else f=114 do n=nil end end else n=nil f=96 end else if f>=199 then if f<240 then f=245 do return n end else e=30;end else f=199 n=(n-n%1)end end end end ba=958 end else if ba>=1072 then if ba>1076 then do bb=function()local b b=cb(bs,bu,bu)bu=(bu+1);do return b;end end end ba=1127 else ba=1088 bz=function()local b,c,d,e d,e,c,b=cb(bs,bu,(bu+3))bu=(bu+4);return((b*16777216)+(c*65536)+(e*256)+d);end end else bu=1 ba=1072 end end end else if ba<=1245 then if ba>=1193 then if ba<=1193 then br=function(b,b,b,b)local b,c,d,e=68,67,21,14,96,91,49,85,83,76,90,12 while b~=25 do if c>=190 then if c<=190 then bu=(bu+e);c=206 else if c<225 then c=227 return d;else break end end else if c<=67 then c=98 d,e=nil else if c>103 then d=bs:sub(bu,(bu+e-1))c=190 else e=bz()c=147 end end end end end ba=1229 else if ba>1236 then bq={}ba=1281 else ba=1245 cl=function(...)return{...},ci('#',...)end end end else if ba>1136 then ck=function()local b,c,d,e,f,n,p,q=49,46,60,25,29,95,54,21,85,97,73,97,42,86,60,99,91,36 while b~=36 do if c>=238 then if c<=315 then if c<=238 then f=ce(20,n,11)c=287 else if c>289 then c=344 do q=1 end else e=(ce(0,n,20)*4294967296+d)c=315 end end else if c>=360 then if c>369 then b=36;else c=400 return(p*(2^(f-1023))*(e/bi+q))end else if not(f~=0)then if not(e==0)then do f=1 end do q=0 end else return(p*0)end elseif 2047~=f then else if not(e~=0)then do return(p*(0/0))end else return(p*(1/0))end end c=360 end end else if c>=127 then if c<=127 then c=167 n=bz()else if c<201 then c=204 if((d==0 and n==0))then return 0 end else c=238 p=((-1)^ce(31,n,1))end end else if c>53 then d=bz()c=127 else c=81 d,e,f,n,p,q=nil end end end end end ba=1193 else ba=1175 bl=function()local b,c b,c=cb(bs,bu,(bu+2))bu=(bu+2);return((c*256)+b);end end end else if ba>=1396 then if ba>=1437 then if ba>1439 then break else ba=1460 return bv(bc(bo()),{},bo())();end else ba=1437 bv=function(b,c,d,e)local e,f,n,p,q q=b[87]e=b[16]p=b[127]do f=be end n=b[159]return function(...)local b,f,s,u,z,bd,bf,bg,bi bf=1 do bd=-1 end f=-1 u={}do s={...}end bg=(ci('#',...)-1)b={}z={}do for f=0,bg do if(not(f<e))then do u[(f-e)]=s[(f+1)];end else z[f]=s[(f+1)];end;end;end bi=(bg-e+1)while true do local f,bi,bj,bk,bl,bm,bn,bo,bp,bs do f=p[bf]end bi=f[125]bs=f[49]bo=f[56]bn=f[14]bm=f[187]bj=f[15]bp=f[155]do bl=f[a]end bk=f[30]if not(bi>48)then if not(bi>23)then if not(f[125]>11)then if not(bi>5)then if not(bi>2)then if not(bi>0)then local a,bs,bu a=bo bs=z[(a+2)]bu=(z[a]+bs)z[a]=bu;if((bs>0))then if(not(bu>z[a+1]))then bf=f[39];z[(a+3)]=bu;end elseif(not(bu<z[a+1]))then bf=bl;do z[(a+3)]=bu;end end else do if(bi<2)then while((q[bo]<z[bm]))do bf=bl;break end else z[bk]=(function()do z[f[56]]=bv(n[bn],nil,d);end end)end end end else if not(f[125]>3)then z[bo]=be[bn]else if(bi>4)then p[bf]={[187]=15,[125]=f[125]- -49,[39]=8,[56]=6,[15]=0};do bf=(bf-1);end else z[bo]=z[bl][z[bm]];end end end else if not(bi>8)then if not(bi>6)then z={};for a=0,bg do do if(a<e)then z[a]=s[(a+1)];else break end;end end;else if 7==bi then q=be[bo](q)else local a,e do e,a=cl(...)end for a=1,bo do z[(a-1)]=e[a]end end end else do if not(f[125]<h)then if 10==bi then be[bo]={}else do z[bo]=(z[bl]^z[bm]);end end else do z[bo]=-z[f[39]];end end end end end else if not(bi<18)then if not(bi>20)then if not(bi>18)then local a a=bo z[a]=z[a](cf(z,a+1,bl));else if(bi>19)then local a a=bo z[a](z[(a+1)])else do bf=((q[bo]~=q[bm])and bl or bf)end end end else if not(bi<22)then if(bi>22)then local a a=z[bp][bj]z[bp][bj]=(a..z[bm]);else while((z[bo]>z[bm]))do bf=bl;break end end else z[bo]=#z[bl];end end else if not(bi<15)then if not(f[125]<16)then if(f[125]>16)then local a,e e=bo a={}if(#b>t)then for h=1,#b do local s s=b[h]for h=0,#s do local t,bg,bs bs=s[h]t=bs[1]bg=bs[2]do while t==z and bg>=v do a[bg]=t[bg]bs[1]=a break end end end end end return z[e],z[(e+1)]else z[bo]=d[q[bl]];end else while not z[bo]do bf=bl;break end end else if not(bi>12)then local a a=bo z[a]=z[a](z[a+1]);else if(bi>13)then p[bf]={[125]=bi-10,[187]=20,[56]=23,[m]=0,[39]=0};bf=(bf-1);else if bo then f[56]=false;do bm=bl;end bf=(bf-1);else bf=(bf+bl+bm);end end end end end end else if not(bi>35)then if not(f[k]<30)then do if not(bi<33)then if not(bi>33)then else if(bi>i)then bf=((q[bo]<z[bm])and bl or bf)else z[bo]=(z[bl]-z[bm]);end end else if not(bi>30)then p[bf]={[125]=bi- -42,[39]=2,[56]=1,[187]=0,[15]=0};bf=(bf-1);else if(bi>31)then if not z[bm]then z[f[56]]=z[f[187]];bf=bl;end;else do z[bo]=be[f[14]]end end end end end else if not(bi>26)then if not(f[125]>24)then local a do a={}end do if(#b>0)then for e=1,#b do local h h=b[e]for e=0,#h do local i,k,m k=h[e]i=k[1]m=k[2]if(i==z and m>=0)then a[m]=i[m]k[1]=a end end end end end return z[bo],f[bo],z[(f[56]+1)];else if(bi<26)then bf=((z[bo]<z[bm])and bl or bf)else d=z[f[bo]]end end else do if not(bi<28)then do if(f[125]<29)then local a,e do a=bo end do e={}end do for h=1,#b do local i i=b[h]for h=0,#i do local k,m,s s=i[h]k=s[1]m=s[2]do while k==z and m>=a do e[m]=k[m];s[1]=e;break end end end;end;end else do c[bl]=z[bo];end end end else do z[bo]=(not(bl==0));end bf=(bf+1);end end end end else if not(bi>41)then if not(bi>38)then if not(bi<37)then if not(bi~=37)then bf=bl;else p[bf]={[15]=l,[56]=8,[187]=33,[39]=8,[125]=bi- -31};bf=(bf-1);end else do d[q[f[39]]]=z[bo];end end else do if not(bi<40)then do if(bi>40)then p[bf]=bq[bj];do bf=f[39];end else be[bo]()end end else local a,e,h do e=bo end a=z[e]h=bl do for i=1,h do do a[i]=z[(e+i)]end end;end end end end else if not(bi>44)then if not(f[125]<43)then if(f[125]<44)then z[bo]=(z[bl]*q[bm]);else do p[bf]={[39]=1,[15]=0,[56]=0,[125]=bi- -22,[187]=1};end bf=(bf-1);end else if(z[bm]~=z[bo])then bf=bl;end;end else if not(bi<47)then if(bi>47)then while((z[bo]~=q[bm]))do bf=bl;break end else local a,e,h,i,k e=bo k=bm h=(e+2)a={z[e](z[e+1],z[h])}for l=1,k do z[(h+l)]=a[l]end i=z[(e+3)]if i then z[h]=i else bf=bl;end;end else if(bi>45)then z[bo][q[bl]]=q[bm];else z[bo]=(z[f[39]]%q[bm]);end end end end end end else if not(bi>73)then do if not(bi>60)then if not(bi>54)then do if not(bi<52)then if not(bi>52)then do be=z end else if(bi>53)then z[bo]=q[bl]else local a,e a=bl e=z[a]for h=(a+1),bm do e=(e..z[h]);end;z[bo]=e;end end else if not(bi>49)then z[bo]=(z[bl]/z[bm]);else do if(bi>50)then z[bo]=(z[f[39]]+z[f[187]]);else z[f[56]]=c[bl];end end end end end else if not(bi>57)then if not(bi<56)then if(bi<57)then z[bo]=z[bl];else do be[bo]=be[f[14]]end end else local a,e,h h=bo a=z[h]e=z[(h+2)]if((e>0))then if((a>z[h+w]))then bf=bl;else z[(h+3)]=a;end elseif((a<z[h+1]))then bf=bl;else do z[(h+3)]=a;end end end else do if not(bi>58)then else do if(f[125]<60)then z[bo]={};else local a,e,h h=bo e={z[h](cf(z,h+1,bl))}a=0 for i=h,bm do a=(a+1);z[i]=e[a];end end end end end end end else if not(bi>66)then if not(bi<64)then if not(bi>64)then local a,e,h,i do e=bo end do h=((bm-1)*50)end i=z[e]a=bl for k=1,a do do i[(h+k)]=z[(e+k)]end end;else if(bi<66)then local a,e,h do a=n[bl]end h=nil e={}h=ca({},{__index=function(i,i)local i=e[i];return i[1][i[2]];end,__newindex=function(i,i,k)local i=e[i]i[1][i[2]]=k;end;});for i=1,bm do local k k=f[73][i]if k[1]then do e[(i-1)]={z,k[2],nil,nil};end else e[(i-1)]={c,k[2],nil,nil,nil,nil};end;b[(#b+1)]=e;end;z[bo]=bv(a,h,d);else if z[bo]then do bf=bl;end end;end end else if not(bi>61)then for a=bo,bl do z[a]=nil;end;else if 62==f[125]then z[bo]=d[q[bl]][q[bm]];else z[f[f[56]]]=z end end end else if not(f[j]<70)then do if not(bi>71)then if(bi<71)then z[f[56]]=z[bl]else local a,c do c=bo end a=z[f[39]]z[(c+1)]=a;z[c]=a[z[bm]];end else if(bi>o)then local a,c a=bo do c={}end if(#b>0)then for e=1,#b do local h h=b[e]do for b=0,#h do local e,i,j e=h[b]i=e[1]j=e[2]if(i==z and j>=0)then c[j]=i[j]e[1]=c end end end end end return cf(z,a,bd);else local a,b,c,e c=bo e,b=cl(z[c](z[(c+1)]))bd=(b+c-1)a=0 for b=c,bd do a=(a+1);z[b]=e[a];end;end end end else do if not(bi>67)then if(not(z[bo]<z[bm]))then bf=bl;end;else if(f[125]>68)then z[bo]=z[bl][q[bm]];else local a a=bo do return z[a](cf(z,(a+1),bl))end;end end end end end end end else do if not(bi>85)then if not(bi<80)then if not(bi<83)then do if not(bi<84)then if(bi<85)then z[bo]=(z[bl]/q[f[187]]);else z[bo]=bv(n[bl],nil,d);end else local a,b,c,e do b=bo end e,c=cl(z[b](cf(z,(b+1),bl)))bd=(c+b-1)a=0 for c=b,bd do a=(a+1);z[c]=e[a];end;end end else if not(bi<81)then if(bi<82)then z[bo]=(z[bl]%z[f[187]]);else bd=f[bo];end else do return z[f[56]]end end end else if not(bi<77)then do if not(bi<78)then if(bi>78)then z[bk]=(function()do z[bo]=bv(n[bn],nil,d);end end)else do do return z[bp][bj]end end end else z[bo][q[bl]]=z[f[187]];end end else if not(bi<75)then if 75==bi then z[f[56]]=(not z[bl]);else local a,b b=bo a=z[bl]z[(b+1)]=a;z[b]=a[q[bm]];end else while(z[bo]<z[bm])do bf=f[39];break end end end end else if not(bi<92)then if not(bi<95)then if not(bi<97)then if 97==bi then else local a a=bo do do do return cf(z,a,(a+f[39]))end end;end end else if 95==bi then do z[bo]=(z[bl]+q[f[187]]);end else z[bo][z[bl]]=z[bm];end end else if not(bi>92)then local a,b a=f[56]b=bl for c=a,b do z[c]=u[(c-a)];end;else if not(bi~=x)then z[bo]=nil;else be[bo]=z[bn]end end end else if not(bi>88)then if not(bi<87)then do if 87==bi then z[bo]=(z[f[39]]*z[bm]);else local a do a=bo end z[a]=z[a](cf(z,a+1,bd));end end else local a a=bo z[a](cf(z,(a+1),bd))end else if not(bi>89)then z[bk]();else if(bi>90)then p[bf]=bq[bj];do bf=bl;end else do z[bo]();end end end end end end end end end bf=(bf+1);end;end;end end else if ba>=1325 then if ba<1364 then ba=1371 be={}else ba=1396 bt={}end else ba=1325 do bc=function(a,b,b,b)local b,c,d,e,f,h,i,j=100,55,80,28,39,60,92,25,85,52,35,93,41,67,77,50,26,76,18,89,57,19,36,32,68 while b~=53 do if c>=311 then if c<=422 then if c<=351 then if c<342 then d=bz()c=351 else do i={}end c=383 end else if c>387 then c=446 do h[87]=i end else c=422 do for k=1,d do local l,m,n,o=64,31,96,73,77,99,56,24,86,46,39,30,67 while l~=42 do if m<=112 then if m>=77 then if m>85 then m=150 do o=nil end else m=112 do n=bb()end end else m=77 n,o=nil end else if m<=150 then m=173 if(not(n~=2))then o=(0~=bb());elseif(not(n~=4))then o=ck();elseif(not(n~=1))then o=br();elseif(3==n)then o=a[br()];end;else if m<216 then m=220 do i[k]=o;end else l=42;end end end end end end end end else if c<=489 then if c>452 then do for a=1,bz()do local k,l,m,n,o,p=76,38,24,31,98,21,43,96,43,52,72,33,29,74,75,29,99,77,12,90,18,85,19,18,76 while k~=47 do if l<=296 then if l>=160 then if l>=229 then if l<=229 then n=bz()l=261 else if l>263 then m[46]=p l=334 else p=bh(o,1,2)l=296 end end else if l>166 then l=229 o=bz()else l=207 do if not(bb()~=y)then for q=1,bb()do m[73][q]={bb()==0,bz()}end end end end end else if l<=74 then if l>45 then l=111 m={{},nil,nil}else m,n,o,p=nil l=74 end else if l>117 then l=160 m[73]={};else l=134 m[49]=bb();end end end else if l<=421 then if l>=383 then if l>385 then m[187]=bh(o,21,g);l=444 else do m[39]=bh(n,12,33);end l=421 end else if l<345 then m[125]=bh(n,1,11);l=351 else l=383 m[56]=bh(o,3,11);end end else if l>=498 then if l<=498 then m[30]=-m[187]l=547 else if l>553 then k=47;else l=591 e[a]=m;end end else if l<464 then do m[15]=bh(o,12,20);end l=473 else l=498 m[155]=-m[56]end end end end end end end c=537 else h[16]=bb();c=489 end else if c>=575 then if c>578 then b=53;else c=603 return h;end else h[127]=e;c=575 end end end else if c<=175 then if c>=132 then if c<173 then c=175 do j={}end else c=204 h={}end else if c<88 then d,e,f,h,i,j=nil c=93 else c=132 e={}end end else if c<=234 then if c<225 then c=234 f=bz()else c=249 for a=(#bq+1),(#bq+f)do local b,d,e,f,g=99,69,55,45,86,93,41,12,83,84,30,48,41,23,84,36,96,87,68,65,22,77,38,67 while b~=52 do if d<=284 then if d>=196 then if d<=223 then if d>203 then do e[15]=bb();end d=241 else f=bz()d=223 end else if d>248 then e[125]=bh(f,1,11);d=303 else d=284 e[46]=bh(g,1,2);end end else if d<=98 then if d<90 then e,f,g=nil d=98 else d=125 e={}end else if d<163 then do e[49]=bb();end d=171 else d=196 g=bz()end end end else if d>=419 then if d>=483 then if d>486 then b=52;else d=522 bq[a]=e;end else if d<451 then e[155]=-e[56]d=453 else do e[30]=-e[187]end d=483 end end else if d<=344 then if d>305 then e[14]=bh(g,12,20);d=374 else d=344 e[56]=bh(g,3,11);end else if d<401 then e[r]=bh(g,21,29);d=404 else d=419 e[39]=bh(f,12,33);end end end end end end end else if c<269 then c=274 for a=1,bz()do do j[a-1]=bc();end end else c=311 h[159]=j;end end end end end end end end end end end end end end)(39,true,10,0,2,6,29,10,34,125,125,0,15,2,72,0,8,187,12,0,0,0,1,93,1)
