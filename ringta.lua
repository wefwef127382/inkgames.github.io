--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,z)local z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn=96,90,17,54,80,29,62,70,95,78,82,44,92,96,78,11,12,96,24,25,93,59,64,61,30,14,78,94,94,66,61,37,93,52,30,74,22,35,65,84,99,45,14,54,56,72,10,18,93,12,36,17 while z~=81 do if ba<=721 then if ba>=439 then if ba<=538 then if ba<=457 then if ba<449 then cm=select ba=457 else bs=type ba=476 end else if ba<=476 then ba=504 by=(function(z,co,co,co)if not(bs(z)~='number')then return true else return false end end)else if ba>507 then ba=564 ck=math.floor else cd=math.abs ba=538 end end end else if ba>=645 then if ba<=645 then for z=0,255 do cj[z]=bf(z);end ba=691 else if ba<719 then ba=721 bi=bnfunction(z,co)return cj[cb(z,16)]end)else ci={{0,1,2,3,4,5,6,7,8,g,10,11,12,13,14,15,},{1,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14,},{2,3,0,1,6,7,4,5,10,11,8,9,14,15,12,13,},{3,2,1,0,7,o,5,4,11,10,9,8,15,14,13,12,},{4,5,6,7,0,1,p,3,12,13,14,15,8,9,10,11,},{5,4,7,6,x,0,3,2,13,12,15,14,9,8,11,10,},{6,7,4,5,2,3,0,1,14,15,12,13,10,11,8,9,},{7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8,},{8,9,10,11,12,13,14,15,0,1,2,3,4,5,6,7,},{9,8,11,f,13,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,j,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,14,13,12,3,2,1,0,7,6,y,4,},{12,13,14,15,8,c,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,10,q,t,9,6,7,4,5,2,3,0,u,},{15,14,13,12,11,d,9,8,7,6,5,4,3,2,1,0,},nil,nil,nil,nil}ba=753 end end else if ba<=564 then do bz=(unpack or table.unpack)end ba=579 else if ba<610 then ba=616 do cb=tonumber end else ba=645 cj={}end end end end else if ba<=201 then if ba<=120 then if ba<116 then ba=120 bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn=nil else bq=string.byte ba=141 end else if ba<=141 then ba=185 bf=string.char else if ba<193 then bh=string.sub ba=201 else bn=string.gsub ba=248 end end end else if ba>=335 then if ba<=335 then ca=math.ldexp ba=362 else if ba<395 then ch=(getfenv or function()return _ENV end)ba=401 else bd=setmetatable ba=439 end end else if ba>=277 then if ba<296 then ba=302 do cl=table.concat end else cg=table.insert ba=335 end else ba=277 do bo=string.rep end end end end end else if ba<=1126 then if ba>=923 then if ba>=1033 then if ba<=1033 then ba=1077 bg=1 else if ba<1120 then ba=1126 bb=function()local c,d,f,g c,f,d,g=bq(bi,bg,(bg+3))bg=(bg+4);return((g*16777216)+(d*65536)+(f*256)+c);end else bm=function()local c c=bq(bi,bg,bg)bg=(bg+1);return c;end ba=1160 end end else if ba>=964 then if ba>969 then be=function(c,d,f,g,g,g,g)local g do g=((c/2^(d-1))%2^((f-1)-(d-1)+1))end do return(g-g%1);end end ba=1033 else bc=(bit_lib and bit_lib.bxor or function(c,d)c=c%(2^32)d=d%(2^32)local f,g=0,1 while c>0 and d>0 do local j,o=c%16,d%16 f=f+ci[j+1][o+1]*g c=(c-j)/16 d=(d-o)/16 g=g*16 end f=f+c*g+d*g return f end)ba=1001 end else ba=964 cn=function(c,d,f,g,g)local g,j,o=52,63,81,18,84,19,64,80,24,56,46,21,34,71,56,90 while g~=28 do if j<=114 then if j<=63 then o=nil j=98 else if j<107 then o=nil j=114 else o=((d/bk[c])%bk[f])j=131 end end else if j<=131 then do o=(o-o%1)end j=167 else if j<194 then j=198 return o else break end end end end end end end else if ba>=823 then if ba>=858 then if ba<871 then ba=877 cc=2 else for c=1,31 do bk[c]=cc do cc=(cc*2)end end ba=923 end else ba=858 bk={[0]=1}end else if ba>761 then do bx=(2^52)end ba=823 else bu=''ba=800 end end end else if ba<=1313 then if ba<=1199 then if ba<1196 then ba=1199 bp=function()local c,d c,d=bq(bi,bg,(bg+2))do bg=(bg+2);end do return((d*r)+c);end end else bt=function()local c,d,f,g,j,o,p,q=51,62,51,69,13,96,55,96,53,11,46,69,44,85,56,77,97,58 while c~=33 do if d<=160 then if d<=95 then if d>67 then q=bb()d=121 else d=95 f,g,j,o,p,q=nil end else if d>=139 then if d<152 then if((q==0 and f==0))then return 0 end d=160 else do j=((-1)^cn(h,f,1))end d=192 end else f=bb()d=139 end end else if d<=260 then if d>=215 then if d>220 then p=1 d=277 else d=260 o=(cn(0,f,20)*4294967296+q)end else d=215 g=cn(20,f,11)end else if d>=297 then if d>299 then c=33;else d=335 return(j*(2^(g-1023))*(o/bx+p))end else do if not(g~=0)then if 0~=o then do g=1 end p=0 else return(j*0)end elseif 2047~=g then else if 0==o then do return(j*(0/0))end else return(j*(1/0))end end end d=297 end end end end end ba=1234 end else if ba>=1278 then if ba>1287 then bl={}ba=1345 else ba=1313 cf=function(...)return{...},cm('#',...)end end else ce=function(c,c,c,c)local c,d,f,g=37,54,58,82,75,32,95,70,28,97,44,34,85,62,41 while c~=26 do if d<=111 then if d>=77 then if d>80 then d=148 g=bi:sub(bg,(bg+f-1))else d=111 f=bb()end else d=77 f,g=nil end else if d<=148 then bg=(bg+f);d=173 else if d>177 then c=26;else d=190 return g;end end end end end ba=1278 end end else if ba<=1390 then if ba<=1345 then ba=1363 br=function(c,d)local d,f,g,h,j,o,p,q=81,45,98,86,10,67,60,66,16,72,33,30,92,69,82,97,61,43,40,74,90,21,26 while d~=53 do if f<=279 then if f<=130 then if f<=78 then if f<69 then f=78 g,h,j,o,p,q=nil else f=103 p={}end else if f<123 then f=130 o={}else g={}f=176 end end else if f>=251 then if f<275 then f=279 h=bb()else q={}f=304 end else if f>179 then for d=(#bl+1),(#bl+j)do local r,t,u,x,y=81,27,72,46,53,27,56,85,37,10,99,34,21,43,24,61,80,41,39,61,95,82,50 while r~=46 do if t<=243 then if t<=119 then if t<=67 then if t>32 then t=85 do y={}end else u,x,y=nil t=67 end else if t>87 then u=bb()t=168 else y[30]=bm();t=119 end end else if t>=219 then if t>221 then y[87]=be(x,1,11);t=291 else y[80]=be(u,1,2);t=243 end else if t<183 then t=191 do x=bb()end else t=219 y[180]=bm();end end end else if t>=424 then if t<=442 then if t<440 then t=442 y[48]=-y[45]else t=475 do y[39]=-y[145]end end else if t>483 then break else t=515 bl[d]=y;end end else if t<=310 then if t>296 then y[10]=be(u,12,20);t=352 else t=310 y[45]=be(u,3,11);end else if t<377 then y[145]=be(u,21,29);t=379 else t=424 do y[159]=be(x,12,33);end end end end end end end f=251 else j=bb()f=218 end end end else if f>=448 then if f<=493 then if f>454 then for d=1,bb()do o[d-1]=br();end f=508 else do g[97]=bm();end f=493 end else if f>=557 then if f<595 then f=597 do return g;end else break end else g[118]=o;f=557 end end else if f<=338 then if f>312 then f=372 do g[l]=q end else do for d=1,h do local h,j,l,o=66,45,71,13,89,47,61,97,88,95,30,73,73,14 while h~=44 do if j>=157 then if j<=157 then if(0==l)then o=(0~=bm());elseif(not(l~=1))then o=bt();elseif(3==l)then o=ce();elseif(4==l)then o=c[ce()];end;j=187 else if j<225 then j=227 q[d]=o;else h=44;end end else if j<=45 then l,o=nil j=66 else if j<106 then do l=bm()end j=112 else j=157 o=nil end end end end end end f=338 end else if f<411 then f=414 for c=1,bb()do local d,h,j,l,o,q=59,48,72,72,90,51,25,83,51,60,62,55,20,95,18,57,48,84,70,66,50,38,37,12,61 while d~=39 do if h<=350 then if h<=166 then if h>=123 then if h>125 then do q[116]={};end h=214 else h=166 q[k]=bm();end else if h>57 then q={{},nil}h=123 else j,l,o,q=nil h=89 end end else if h<=250 then if h<245 then if 1==bm()then for d=1,bm()do q[116][d]={bm()==0,bb()}end end h=250 else j=bb()h=290 end else if h>=307 then if h<344 then l=be(j,1,2)h=350 else h=374 q[80]=l end else o=bb()h=307 end end end else if h>=538 then if h<=555 then if h<546 then do q[180]=be(j,12,20);end h=555 else h=599 q[48]=-q[45]end else if h<=599 then h=647 do q[39]=-q[145]end else if h<675 then h=678 p[c]=q;else break end end end else if h>=449 then if h>455 then h=538 do q[145]=be(j,21,29);end else do q[159]=be(o,12,33);end h=496 end else if h>383 then do q[45]=be(j,3,11);end h=449 else q[87]=be(o,1,11);h=421 end end end end end end else f=448 g[133]=p;end end end end end end else if ba>1368 then bw={}ba=1431 else ba=1390 bv={}end end else if ba>=1455 then if ba>1458 then break else ba=1472 return bj(br(ch()),{},ch())();end else bj=function(c,d,f,g,g,g)local g,h,j,k,l j=c[97]do k=c[118]end h=bv g=c[170]l=c[133]return function(...)local c,h,o,p,q,r,t,u,x x=1 p=-1 o=-1 h={}t={...}c=(cm('#',...)-1)r={}q={}do for o=0,c do do if(not(o<j))then do h[(o-j)]=t[(o+1)];end else q[o]=t[(o+1)];end;end end;end u=(c-j+1)while true do local o,u,y,z,bb,bc,be,bf,bg,bh bh=l[x]bg=bh[87]do o=bh[30]end be=bh[45]z=bh[w]do u=bh[145]end bf=bh[180]y=bh[48]bb=bh[159]bc=bh[39]if not(bg<s)then if not(bg<72)then if not(bh[87]>83)then if not(bg>77)then if not(bg>74)then do if not(bg>72)then local o o=be q[o]=q[o](bz(q,o+1,p));else if(bg<74)then q[be]=(q[bb]/q[u]);else l[x]={[159]=3,[180]=0,[145]=i,[45]=22,[87]=bh[87]-74};do x=(x-1);end end end end else if not(bg<76)then if 76==bh[87]then else q[be]=(q[bb]*q[bh[145]]);end else do for i=be,bb do q[i]=nil;end;end end end else if not(bh[87]>80)then if not(bg>78)then local i i=q[y][bf]q[bh[48]][bf]=(i..q[u]);else do if(bg<80)then x=bb;else do q[bh[45]]=(q[bb]%q[bh[145]]);end end end end else if not(bg<82)then if(bg<83)then q[be]=q[bb][g[u]];else bv[be]=bv[z]end else bv[be]=q[z]end end end else if not(bg<90)then if not(bg<93)then if not(bg<95)then if 95==bg then q[be]=bj(k[bb],nil,f);else local i,o,s s=be do o={q[s](q[s+1])}end do i=0 end for w=s,u do i=(i+1);q[w]=o[i];end end else if not(bg~=93)then local i,o,s o=be s=q[(o+2)]i=(q[o]+s)q[o]=i;if((s>0))then if(not(i>q[o+1]))then x=bb;q[(o+3)]=i;end elseif(not(i<q[o+1]))then x=bb;q[(o+3)]=i;end else do return q[y][bf]end end end else if not(bh[87]<91)then if(bg<92)then local i i=be do do return bz(q,i,(i+bb))end;end else local i,o,s s=be i=q[s]do o=bb end for w=1,o do i[w]=q[(s+w)]end;end else local i,o,s,w s=be w,i=cf(q[s](bz(q,(s+1),bh[159])))p=(i+s-1)o=0 do for i=s,p do o=(o+1);q[i]=w[o];end;end end end else if not(bg>86)then do if not(bg<85)then if(bg>85)then x=((g[be]<q[u])and bb or x)else q[be]=(q[bh[159]]%g[u]);end else if((q[be]<q[u]))then x=bb;end;end end else if not(bg>87)then q[be]={};else if 88==bg then bv[bh[45]]={}else do q[be]=q[bb]end end end end end end else if not(bg>59)then if not(bg<54)then if not(bg>56)then if not(bg<55)then if(bh[87]<56)then q[be]=(not q[bb]);else local i,o o=bh[v]i=q[bh[159]]do q[(o+1)]=i;end q[o]=i[q[u]];end else local i,o,s s=be i=q[s]o=q[(s+2)]do if((o>0))then do if((i>q[s+1]))then x=bb;else q[(s+3)]=i;end end elseif((i<q[s+1]))then x=bb;else q[(s+3)]=i;end end end else if not(bg<58)then if(bg>58)then else do q[be]=(q[bb]-q[u]);end end else do f[g[bb]]=q[be];end end end else if not(bh[87]>50)then if not(bg>48)then do q[bh[45]]=bv[bh[10]]end else if not(bg~=49)then local i,o i=bh[45]o={}if(#r>0)then do for s=1,#r do local v v=r[s]for s=0,#v do local w,y,bi y=v[s]do bi=y[1]end w=y[2]do while(bi==q and w>=0)do o[w]=bi[w]y[1]=o break end end end end end end return bz(q,i,p);else do while(g[bh[45]]<q[u])do x=bb;break end end end end else if not(bh[87]<52)then if(bg<53)then local i i=be q[i](bz(q,(i+1),p))else q[be]=(q[bb]^q[u]);end else do if q[be]then x=bb;end;end end end end else if not(bh[n]>65)then if not(bg<63)then if not(bg<64)then do if 64==bg then q[bc]=(function()q[bh[45]]=bj(k[z],nil,f);end)else q[bh[45]]=f[g[bb]][g[u]];end end elseif(g[u]~=q[bh[45]])then x=bb;end else if not(bg>60)then q[be]=-q[bb];else if(bh[87]<62)then q[be]=bv[z]else q[be][g[bb]]=q[u];end end end else if not(bh[87]<69)then if not(bg>69)then local i,n,o,s o=be i,n=cf(q[o](q[(o+1)]))p=(n+o-1)s=0 for n=o,p do s=(s+1);q[n]=i[s];end;else if(bh[87]<71)then q[be]=#q[bb];else local i,n,o i=k[bb]n=nil o={}n=bd({},{__index=function(s,s)local s=o[s];return s[1][s[2]];end,__newindex=function(s,s,v)local s=o[s]s[1][s[2]]=v;end;});for s=1,u do local v v=bh[116][s]if v[1]then do o[(s-1)]={q,v[2],nil,nil,nil};end else o[(s-1)]={d,v[2],nil,nil,nil};end;r[(#r+1)]=o;end;q[be]=bj(i,n,f);end end else if not(bg<67)then if 67==bg then do q[be]=q[bb];end else q[be]=g[bb]end else q[be]=(q[bb]+g[u]);end end end end end else if not(bg<24)then if not(bg>35)then if not(bg<30)then if not(bg>32)then if not(bh[87]<31)then do if 31==bg then local i,n,o,s n=bh[m]o={q[n]()}i=u s=0 for m=n,i do do s=(s+1);end q[m]=o[s];end else do q[bh[45]][q[bb]]=q[u];end end end else local i i={}while(#r>0)do for m=1,#r do local m=r[m]for n=0,#m do local m=m[n]local n=m[1]local o=m[2]if n==q and o>=0 then i[o]=n[o]m[1]=i end end end break end return true,false;end else if not(bg<34)then if 34==bg then q[bh[be]]=q else q[bc]();end else local i,m i=be m=q[bb]q[(i+1)]=m;q[i]=m[g[u]];end end else do if not(bg>26)then if not(bg>24)then local i,m m,i=cf(...)do for i=1,be do q[(i-1)]=m[i]end end else if(bg<26)then else local i i=be q[i]=q[i](q[i+1]);end end else do if not(bg<28)then do if(bg>28)then if(q[bh[145]]~=q[be])then x=bb;end;else l[x]={[145]=0,[180]=0,[45]=1,[87]=bg- -41,[159]=2};x=(x-1);end end else local i,m,n i=be n={q[i](bz(q,i+1,bh[159]))}m=0 for o=i,u do m=(m+1);q[o]=n[m];end end end end end end else if not(bg>41)then if not(bg<39)then if not(bg<40)then if(bh[87]<41)then l[x]=bl[bf];x=bb;else do l[x]=bl[bf];end do x=bh[159];end end elseif not q[be]then do x=bb;end end else if not(bg<37)then do if(bg>37)then if be then be=false;do u=bb;end x=(x-1);else x=(x+bb+u);end else q[be]=q[bb][q[u]];end end else q[bc]=(function()q[be]=bj(k[z],nil,f);end)end end else if not(bg>44)then if not(bg<43)then if not(bg~=43)then d[bh[159]]=q[bh[45]];else bv=q end else do q[be]=nil;end end else if not(bg>45)then local i i=be do q[i]=q[i](bz(q,i+1,bb));end else if(bg<47)then local i i=be q[i](bz(q,(i+1),bb))else q[be]();end end end end end else do if not(bg>11)then if not(bg>5)then if not(bg>2)then if not(bg>0)then q[be]=f[g[bb]];else if not(bg~=1)then g=bv[be](g)else local i,k,m,n,o o=be do n=u end m=(o+2)i={q[o](q[o+1],q[m])}for s=1,n do do q[(m+s)]=i[s]end end k=q[(o+3)]do if k then do q[m]=k end else x=bb;end;end end end else do if not(bg<4)then if(bg>4)then bv[be]()else local i i=be q[i](q[(i+1)])end else f=q[bh[be]]end end end else do if not(bg<9)then if not(bg<10)then if not(bg~=10)then local f,i,k,m f=bh[b]i=((u-1)*50)k=q[f]m=bb do for b=1,m do k[(i+b)]=q[(f+b)]end;end else do if((q[be]>q[u]))then x=bb;end;end end else local b,f b=bb f=q[b]for i=(b+1),bh[145]do f=(f..q[i]);end;do q[bh[45]]=f;end end else if not(bg>6)then if not q[u]then do q[be]=q[u];end x=bb;end;else if(bg>7)then q[be]=d[bb];else do l[x]={[87]=bh[87]- -61,[159]=31,[180]=0,[45]=11,[145]=a};end x=(x-1);end end end end end else if not(bg<18)then if not(bg>20)then do if not(bg>18)then q[be]=(not(bb==0));x=(x+1);else if 19==bh[87]then local a,b b=be a=bb for d=b,a do q[d]=h[(d-b)];end;else q[bh[45]][g[bb]]=g[u];end end end else if not(bh[87]>21)then local a,b a=be b={}for d=1,#r do local f f=r[d]for d=0,#f do local h,i,k h=f[d]i=h[1]do k=h[2]end while i==q and k>=a do b[k]=i[k];h[1]=b;break end end;end;else if(bg>22)then local a a=be do do return q[a](bz(q,(a+1),bb))end end;else do return q[be]end end end end else if not(bg>14)then if not(bg<e)then if 13==bg then q[be]=(q[bb]/g[u]);else q={};for a=0,c do if(a<j)then q[a]=t[(a+1)];else break end;end;end else q[be]=(q[bb]*g[u]);end else do if not(bg<16)then if 16==bh[87]then q[be]=(q[bb]+q[u]);else if(not(q[bh[45]]<q[u]))then do x=bh[159];end end;end else p=bh[be];end end end end end end end end x=(x+1);end;end;end ba=1455 end end end end end end end)(18,45,9,10,13,10,9,31,0,15,30,170,45,87,6,2,11,256,48,8,1,45,10,1,5)
