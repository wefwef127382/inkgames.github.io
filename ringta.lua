--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,v,v)local v,w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj=101,79,61,34,83,77,15,26,87,29,38,43,14,72,13,67,66,49,57,77,65,87,16,29,28,58,81,10,60,43,26,30,76,43,51,17,46,19,56,18,99,13,37,70,55,25,95,60,93,48,43,56 while v~=82 do if w>=727 then if w<=1048 then if w>=885 then if w<=981 then if w>=934 then if w<978 then w=981 bd=(bit_lib and bit_lib.bxor or function(ck,cl)ck=ck%(2^32)cl=cl%(2^32)local cm,cn=0,1 while ck>0 and cl>0 do local u,co=ck%u,cl%16 cm=cm+be[u+1][co+1]*cn ck=(ck-u)/16 cl=(cl-co)/16 cn=cn*16 end cm=cm+ck*cn+cl*cn return cm end)else w=998 do bp=function(u,ck,cl,cm,cm,cm)local cm do cm=((u/2^(ck-1))%2^((cl-1)-(ck-o)+1))end do return(cm-cm%1);end end end end else do x=function(o,u,ck,cl,cl,cl)local cl,cm,cn=70,67,91,70,62,19,57,80,38,43,69,39,78 while cl~=26 do if cm>=156 then if cm<=156 then do cn=(cn-cn%1)end cm=172 else if cm>176 then cl=26;else cm=197 return cn end end else if cm>=85 then if cm<102 then cm=110 cn=nil else cn=((u/bn[o])%bn[ck])cm=156 end else cn=nil cm=85 end end end end end w=934 end else if w>=1015 then if w>1018 then w=1079 do bb=function()local o o=ch(bv,bc,bc)do bc=(bc+1);end return o;end end else cd=function()local o,u,ck,cl do ck,cl,u,o=ch(bv,bc,(bc+3))end bc=(bc+4);return((o*16777216)+(u*65536)+(cl*256)+ck);end w=1048 end else bc=1 w=1015 end end else if w<=770 then if w>730 then w=802 bs=(2^52)else bq=''w=770 end else if w>=830 then if w>837 then for o=1,31 do bn[o]=cc cc=(cc*2)end w=885 else w=869 cc=2 end else w=830 bn={[0]=1}end end end else if w<=1194 then if w>=1139 then if w<=1139 then w=1172 bg=function(o,o)local o,u,ck,cl=65,56,73,43,29,23,64,15,35,75,66,83,93,71,43 while o~=34 do if u<=120 then if u>=81 then if u<112 then do cl=cd()end u=120 else u=153 ck=bv:sub(bc,(bc+cl-1))end else u=81 ck,cl=nil end else if u>=182 then if u>185 then o=34;else u=199 return ck;end else u=182 bc=(bc+cl);end end end end else if w>1179 then z={}w=1221 else w=1194 do ba=function(...)return{...},br('#',...)end end end end else if w>1085 then bo=function()local o,u,ck,cl,cm,cn,co,cp=61,33,62,87,21,81,68,33,40,81,87,30,94,56,10,93,90,52,83,63,15 while o~=32 do if u>=197 then if u<=246 then if u<=197 then ck=x(20,cn,11)u=215 else if u>223 then do cl=1 end u=270 else cp=(x(0,cn,20)*4294967296+cm)u=246 end end else if u>=287 then if u<318 then u=320 return(co*(2^(ck-1023))*(cp/bs+cl))else break end else u=287 if 0==ck then if 0~=cp then ck=1 cl=0 else return(co*0)end elseif 2047~=ck then else if not(cp~=0)then do return(co*(0/0))end else return(co*(1/0))end end end end else if u>=117 then if u<=117 then u=134 cn=cd()else if u<153 then u=161 if((cm==0 and cn==0))then return 0 end else u=197 do co=((-1)^x(31,cn,1))end end end else if u<70 then ck,cl,cm,cn,co,cp=nil u=75 else u=117 cm=cd()end end end end end w=1139 else cg=function()local o,u u,o=ch(bv,bc,(bc+2))bc=(bc+2);return((o*256)+u);end w=1117 end end else if w<=1265 then if w>=1243 then if w>1250 then bu={}w=1281 else w=1265 ci={}end else ce=function(o,u,u,u)local u,ck,cl,cm,cn,co,cp,cq=77,65,44,48,80,42,51,69,54,41,29,52,89,49,38,59,73,88,27,45,47,91,60 while u~=40 do if ck>=364 then if ck>=516 then if ck<=557 then if ck<554 then ck=557 for cr=1,cd()do do cp[cr-1]=ce();end end else do co[l]=cp;end ck=592 end else if ck<=592 then ck=629 do co[183]=bb();end else if ck<655 then ck=659 return co;else u=40;end end end else if ck<=397 then if ck>372 then cl={}ck=435 else cq=cd()ck=397 end else if ck>441 then co[92]=cl ck=516 else ck=483 for l=1,cq do local u,cr,cs,ct=41,71,85,31,61,21,15,44,36,43,55,79,45,94,60 while u~=31 do if cr>=138 then if cr>=162 then if cr>169 then u=31;else cr=194 cl[l]=ct;end else cr=162 if(2==cs)then ct=(0~=bb());elseif(not(cs~=n))then ct=bo();elseif(3==cs)then ct=bg();elseif(a==cs)then ct=o[bg()];end;end else if cr<=71 then cs,ct=nil cr=86 else if cr>91 then do ct=nil end cr=138 else cr=114 cs=bb()end end end end end end end end else if ck<=167 then if ck>=136 then if ck<160 then ck=167 do cp={}end else ck=193 do co={}end end else if ck>71 then ck=136 cn={}else cl,cm,cn,co,cp,cq=nil ck=102 end end else if ck<=239 then if ck<234 then do cm=cd()end ck=239 else ck=287 for a=(#z+1),(#z+cm)do local l,n,o,u,cl=93,56,72,41,38,92,49,80,48,48,29,56,22,72,82,59,90,23,64,91,46,73 while l~=53 do if n<=338 then if n>=211 then if n>=300 then if n<330 then n=338 u[136]=bp(cl,1,2);else n=382 u[181]=bp(o,1,11);end else if n>217 then u[182]=bb();n=300 else n=259 o=cd()end end else if n>=138 then if n>147 then do cl=cd()end n=211 else n=174 u[144]=bb();end else if n>61 then u={}n=138 else o,u,cl=nil n=104 end end end else if n<=456 then if n<=416 then if n>385 then n=433 u[m]=bp(cl,12,20);else u[199]=bp(cl,3,11);n=416 end else if n<452 then u[d]=bp(cl,21,29);n=456 else n=496 u[135]=bp(o,12,33);end end else if n<=519 then if n<517 then u[i]=-u[199]n=519 else n=568 u[165]=-u[127]end else if n>573 then l=53;else n=590 z[a]=u;end end end end end end end else if ck>290 then ck=364 co[q]=cn;else ck=322 for a=1,cd()do local d,i,l,m,n,o=74,56,18,23,19,40,17,76,95,89,45,48,20,39,38,86,24,56,70,84,49,16,47,68 while d~=55 do if i<=341 then if i<=139 then if i>=112 then if i>121 then n[60]={};i=184 else n[144]=bb();i=139 end else if i>61 then i=112 n={{},nil,nil,nil,nil}else i=91 l,m,n,o=nil end end else if i<=218 then if i>186 then l=cd()i=267 else i=218 if 1==bb()then for d=1,bb()do n[60][d]={bb()==0,cd()}end end end else if i<=267 then i=297 do o=cd()end else if i<334 then m=bp(l,1,2)i=341 else n[136]=m i=360 end end end end else if i>=437 then if i>=520 then if i<=520 then n[165]=-n[127]i=554 else if i<574 then i=579 cn[a]=n;else break end end else if i<476 then n[182]=bp(l,12,20);i=482 else i=520 n[175]=-n[199]end end else if i>=390 then if i<406 then i=410 n[135]=bp(o,12,33);else n[127]=bp(l,21,29);i=437 end else if i<367 then i=375 n[181]=bp(o,c,11);else i=390 do n[199]=bp(l,3,11);end end end end end end end end end end end end end w=1243 end else if w<=1281 then bl=function(a,c,d,i,i)local i,l,m,n,o m=a[183]n=a[164]o=a[41]i=a[92]l=ci return function(...)local a,l,q,u,ck,cl,cm,cn,co do u=1 end cl=-1 co=-1 do cm={}end l={...}ck=(br('#',...)-1)cn={}q={}do for co=0,ck do if(not(co<m))then cm[(co-m)]=l[(co+1)];else q[co]=l[(co+1)];end;end;end a=(ck-m+1)while true do local a,co,cp,cq,cr,cs,ct,cu,cv,cw cs=n[u]do cv=cs[181]end do cq=cs[144]end cu=cs[199]do co=cs[42]end ct=cs[127]a=cs[182]do cr=cs[175]end cw=cs[135]cp=cs[165]if not(cv<49)then if not(cv<73)then if not(cv>84)then if not(cv>78)then if not(cs[181]<76)then if not(cv>76)then q[cu]=i[cw]else if 77==cv then q[cu]=(q[cs[135]]/i[ct]);else q[cu]=(q[cw]*q[ct]);end end else if not(cs[j]<74)then if(cv<e)then if cu then do cu=false;end ct=cw;u=(u-1);else u=(u+cw+ct);end else q[cu]=(0~=cw);u=(u+1);end else do ci[cs[199]]()end end end else do if not(cv>81)then if not(cv<80)then if not(cs[181]~=80)then local e,j,cq j=o[cw]e=nil cq={}do e=cj({},{__index=function(cx,cx)local cx=cq[cx];return cx[1][cx[2]];end,__newindex=function(cx,cx,cy)local cx=cq[cx]cx[1][cx[2]]=cy;end;});end for cx=1,ct do local cy cy=cs[60][cx]do if cy[1]then cq[(cx-1)]={q,cy[2],nil,nil,nil,nil};else cq[(cx-1)]={c,cy[2],nil,nil,nil};end;end cn[(#cn+1)]=cq;end;q[cs[199]]=bl(j,e,d);else q[cu]=(q[cs[135]]-q[ct]);end else q[cu][q[cw]]=q[ct];end else if not(cv>82)then local e e=cu q[e](bj(q,(e+1),cs[135]))else if(cv>83)then local e e=cu do do return bj(q,e,(e+cw))end end;else do q[cs[r]]=(q[cw]/q[ct]);end end end end end end else do if not(cv>90)then if not(cv<88)then if not(cv<89)then if 89==cv then local e,j,r e=cu r=q[e]j=q[(e+2)]if((j>0))then do if((r>q[e+1]))then u=cw;else q[(e+3)]=r;end end elseif((r<q[e+1]))then do u=cw;end else do q[(e+3)]=r;end end else q[cs[199]]=(q[cw]*i[ct]);end else q[cu][i[cw]]=q[ct];end else do if not(cv<86)then if 86==cv then do n[u]={[181]=cv-75,[182]=0,[135]=32,[199]=8,[127]=0};end u=(u-1);else local e,j,r j=cu r={q[j](bj(q,j+1,cs[135]))}e=0 do for cq=j,ct do e=(e+1);q[cq]=r[e];end end end else local e,j,r,cq r=cu j,cq=ba(q[r](bj(q,(r+g),cw)))do cl=(cq+r-1)end e=0 for g=r,cl do e=(e+1);q[g]=j[e];end;end end end else if not(cv>93)then if not(cs[181]<92)then do if(cv<93)then do q[cs[cu]]=q end else local e e=cu do return q[e](bj(q,(e+1),cw))end;end end else local e,g g=cu e={}if(#cn>0)then for j=1,#cn do local r r=cn[j]do for j=0,#r do local cq,cx,cy cy=r[j]cx=cy[1]cq=cy[2]if(cx==q and cq>=0)then e[cq]=cx[cq]cy[t]=e end end end end end return bj(q,g,cl);end else if not(cv<96)then if(cv>96)then else do q[cu]=c[cw];end end else if not(cv~=94)then do return q[cu]end else q[cu]=(q[cw]^q[ct]);end end end end end end else if not(cv<61)then if not(cv>66)then do if not(cs[181]<64)then if not(cv<65)then if(cv<66)then local e,g e=cu g=cw for j=e,g do q[j]=cm[(j-e)];end;else q[cu]=nil;end elseif((i[cu]<q[ct]))then u=cw;end else if not(cv>61)then q[cu]=q[cw][q[ct]];else if 62==cv then q[cp]=(function()q[cs[199]]=bl(o[cs[42]],nil,d);end)else local e,g do e=cu end g=q[cs[135]]do q[(e+1)]=g;end do q[e]=g[i[ct]];end end end end end else if not(cv>69)then do if not(cv>67)then q[cu]=ci[co]else if(cv>68)then if(not(q[cu]==q[ct]))then do u=cw;end end;else q[cu]=(q[cw]%i[ct]);end end end else if not(cs[181]<71)then if not(cs[181]~=71)then local e,g,j,r r=cu e=((ct-1)*50)do g=q[r]end j=cw for t=1,j do g[(e+t)]=q[(r+t)]end;else q[cu]=(q[cw]%q[ct]);end elseif(i[ct]~=q[cs[199]])then u=cw;end end end else if not(cv<55)then if not(cv>57)then if not(cv>55)then u=((q[cu]<q[ct])and cw or u)else if(cv>56)then for e=cu,cw do q[e]=nil;end;else q[cu]=bl(o[cw],nil,d);end end else if not(cv<59)then if 59==cv then c[cw]=q[cu];else local c,e c=cw do e=q[c]end for g=(c+1),ct do e=(e..q[g]);end;q[cu]=e;end else ci[cs[199]]={}end end else if not(cv>51)then if not(cv>49)then n[u]={[135]=107,[182]=0,[199]=0,[127]=1,[181]=cv-3};u=(u-1);else if 50==cs[181]then cl=cs[cu];else ci[cs[199]]=q[co]end end else if not(cv<53)then if(cs[181]>53)then do if not q[ct]then q[cu]=q[ct];u=cs[135];end;end else u=cw;end else while(q[cu]>q[ct])do u=cw;break end end end end end end else if not(cv>23)then if not(cv<12)then if not(cv>17)then if not(cs[181]<15)then if not(cv>15)then n[u]=z[a];u=cs[135];else if(cv<17)then q[cu]=(q[cw]+i[ct]);else q[cu]=(not q[cw]);end end else if not(cv>f)then else do if(cv>k)then q[cu]=q[cw][i[cs[b]]];else q[cp]=(function()q[cu]=bl(o[cs[42]],nil,d);end)end end end end else if not(cv<21)then if not(cv<22)then do if(cv>22)then do q[cu]=d[i[cw]][i[ct]];end else do return q[cr][a]end end end else q[cu]=(q[cw]+q[ct]);end else if not(cv<19)then if(cv<20)then do q[cu]=q[cw]end else do u=((q[cu]~=q[ct])and cw or u)end end else do if(not(q[cu]<q[ct]))then do u=cw;end end;end end end end else if not(cv<s)then do if not(cs[181]<9)then do if not(cv<10)then if 10==cv then q[cu]();else q[cs[199]]=d[i[cw]];end else local b,c do b=cu end c={}for e=1,#cn do local f f=cn[e]do for e=0,#f do local g,j,k g=f[e]k=g[1]j=g[2]while k==q and j>=b do c[j]=k[j];g[1]=c;break end end;end end;end end else if not(cv>6)then q[cu]=q[cs[135]];else if(cs[181]<8)then local b b=cu q[b]=q[b](bj(q,b+1,cw));elseif((q[cu]<q[ct]))then u=cw;end end end end else if not(cv>2)then if not(cv>0)then local b b=cu do q[b](q[(b+1)])end else if not(cs[181]~=1)then local b,c c=cu do b=q[cw]end q[(c+1)]=b;q[c]=b[q[ct]];else n[u]=z[a];u=cw;end end else if not(cs[181]<4)then if(cs[181]>4)then local b,c b,c=ba(...)for c=1,cs[199]do q[(c-1)]=b[c]end else d[i[cw]]=q[cu];end else if not q[cu]then u=cs[135];end;end end end end else if not(cv<36)then if not(cv>41)then do if not(cv>38)then if not(cv>36)then local b,c,e,f do b=cu end e,f=ba(q[b](q[(b+1)]))cl=(f+b-1)c=0 do for f=b,cl do c=(c+1);q[f]=e[c];end;end else if not(cv~=37)then q[cs[199]]=#q[cs[135]];else ci=q end end else if not(cv<40)then do if(cv>40)then local b b=q[cs[175]][a]q[cr][a]=(b..q[ct]);else u=((i[cs[199]]<q[ct])and cw or u)end end else local a do a={}end if(#cn>0)then for b=1,#cn do local c c=cn[b]for b=0,#c do local e,f,g e=c[b]f=e[1]g=e[2]if(f==q and g>=0)then do a[g]=f[g]end e[1]=a end end end end return q[cu],false;end end end else if not(cv<45)then if not(cv<47)then if(cv<48)then local a,b,c c=cu do b=q[c]end a=cw for e=1,a do b[e]=q[(c+e)]end;else local a a=cs[199]q[a]=q[a](bj(q,a+1,cl));end else if(cv<46)then q[cu]=(i[cw]<q[ct]);else do if q[cs[199]]then u=cs[135];end;end end end else if not(cv<43)then do if(cv<44)then local a do a=cu end q[a](bj(q,(a+1),cl))else q[cs[165]]();end end else local a a=cu q[a]=q[a](q[a+1]);end end end else if not(cv>29)then if not(cv<27)then if not(cv>27)then d=q[cs[cu]]else if(cv>28)then ci[cs[p]]=ci[co]else q[cu]=ci[co]end end else if not(cv<25)then if(cs[181]>25)then local a,b a=cs[199]b={}if(#cn>0)then for c=1,#cn do local d do d=cn[c]end for c=0,#d do local e,f,g f=d[c]e=f[1]do g=f[2]end if(e==q and g>=0)then b[g]=e[g]f[1]=b end end end end return q[a],q[(a+1)]else q[cs[199]]={};end else i=ci[cu](i)end end else if not(cv>32)then if not(cv>30)then q[cu][i[cw]]=i[ct];else do if(cv>31)then local a,b,c,d,e b=cu do e=cs[127]end d=(b+2)c={q[b](q[b+1],q[d])}for f=1,e do q[(d+f)]=c[f]end a=q[(b+3)]if a then q[d]=a else u=cw;end;else q={};do for a=0,ck do do if(a<m)then q[a]=l[(a+1)];else break end;end end;end end end end else if not(cv>33)then q[cu]=-q[cw];else do if(cv<35)then local a,b,c b=cu c=q[(b+2)]do a=(q[b]+c)end do q[b]=a;end if((c>0))then if(not(a>q[b+1]))then u=cw;q[(b+3)]=a;end elseif(not(a<q[b+1]))then u=cw;q[(b+3)]=a;end else end end end end end end end end u=(u+1);end;end;end w=1329 else if w>1338 then v=82;else w=1346 return bl(ce(bx()),{},bx())();end end end end end else if w>=415 then if w<=518 then if w<=440 then if w<435 then w=440 br=select else do bk=type end w=479 end else if w>=496 then if w>498 then w=550 bw=math.floor else w=518 cf=math.abs end else cb=(function(a,b,b,b)if'number'==bk(a)then return true else return false end end)w=496 end end else if w>=612 then if w<=612 then w=653 do for a=0,255 do bm[a]=ca(a);end end else if w>656 then do be={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14,},{2,3,0,1,6,7,4,5,10,11,8,9,14,h,12,13,},{3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12,},{4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,11,},{5,4,7,6,1,0,3,2,13,12,15,14,9,8,11,10,},{6,7,4,5,2,3,0,1,14,15,12,13,10,11,8,9,},{7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8,},{8,9,10,11,12,13,14,15,0,1,2,3,4,5,6,7,},{9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,14,13,12,3,2,1,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,10,11,8,9,6,7,4,5,2,3,0,1,},{15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,},nil,nil,nil}end w=727 else w=694 bv=btfunction(a,b,b)return bm[bf(a,16)]end)end end else if w>=573 then if w>577 then bm={}w=612 else bf=tonumber w=593 end else w=573 bj=(unpack or table.unpack)end end end else if w>=246 then if w<=300 then if w<=246 then bz=string.rep w=284 else if w<293 then w=300 do bi=table.concat end else w=332 bh=table.insert end end else if w<=332 then do by=math.ldexp end w=347 else if w>350 then w=415 cj=setmetatable else w=384 bx=(getfenv or function()return _ENV end)end end end else if w>=159 then if w>=200 then if w<211 then w=219 do y=string.sub end else bt=string.gsub w=246 end else w=200 ca=string.char end else if w<105 then w=113 x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj=nil else ch=string.byte w=159 end end end end end end end)(1,127,1,127,75,12,1,15,175,181,13,41,42,4,1,199,164,199,6,1,16)
